<<<<<<< Updated upstream
<<<<<<< Updated upstream
[{"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\index.js":"1","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\reportWebVitals.js":"2","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\App.js":"3","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\Book.js":"4","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\SearchResult.js":"5","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\Home.js":"6","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\SearchBar.js":"7","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\DashboardBookRow.js":"8","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\style\\SearchStyle.js":"9","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\GenreButton.js":"10","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\PageNavbar.js":"11","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\LoginForm.js":"12","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\Profile.js":"13","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\Login.js":"14","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\BookUserControls.js":"15","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\BookIcon.js":"16","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\BookRating.js":"17","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\style\\shared\\index.js":"18","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\style\\LoginStyle.js":"19"},{"size":592,"mtime":1607133621043,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1607014045623,"results":"22","hashOfConfig":"21"},{"size":2015,"mtime":1608113416879,"results":"23","hashOfConfig":"21"},{"size":10917,"mtime":1608109851242,"results":"24","hashOfConfig":"21"},{"size":1292,"mtime":1608109851262,"results":"25","hashOfConfig":"21"},{"size":4130,"mtime":1608099231630,"results":"26","hashOfConfig":"21"},{"size":1423,"mtime":1608090707199,"results":"27","hashOfConfig":"21"},{"size":933,"mtime":1607133621012,"results":"28","hashOfConfig":"21"},{"size":1631,"mtime":1608109359645,"results":"29","hashOfConfig":"21"},{"size":434,"mtime":1607133621017,"results":"30","hashOfConfig":"21"},{"size":1728,"mtime":1608109474557,"results":"31","hashOfConfig":"21"},{"size":7890,"mtime":1608112851050,"results":"32","hashOfConfig":"21"},{"size":1244,"mtime":1608109851257,"results":"33","hashOfConfig":"21"},{"size":336,"mtime":1608090707976,"results":"34","hashOfConfig":"21"},{"size":2284,"mtime":1608109851247,"results":"35","hashOfConfig":"21"},{"size":1338,"mtime":1608090707112,"results":"36","hashOfConfig":"21"},{"size":1163,"mtime":1608095231205,"results":"37","hashOfConfig":"21"},{"size":98,"mtime":1608090707236,"results":"38","hashOfConfig":"21"},{"size":314,"mtime":1608090707216,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"adt938",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\index.js",[],["85","86"],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\reportWebVitals.js",[],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\App.js",["87","88"],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\Book.js",["89","90","91","92"],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\SearchResult.js",[],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\Home.js",["93","94"],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\SearchBar.js",["95"],"import React, { useState, useContext } from 'react'\r\nimport {Button, Form} from 'react-bootstrap'\r\n\r\nimport { BookContext } from './App'\r\nimport SearchResult from './SearchResult'\r\nimport { SearchWrapper } from '../style/SearchStyle'\r\n\r\nconst SearchBar = () => {\r\n  const [query, setQuery] = useState()\r\n  const [type, setType] = useState(\"all\")\r\n  const { queryResult, setQueryResult, setShowResult } = useContext(BookContext)\r\n  const submitSearch = (e) => {\r\n    e.preventDefault()\r\n    fetch(`http://localhost:8081/search/${type}/${query}`, {\r\n      method: 'GET' \r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setQueryResult(res)\r\n        setShowResult(true)\r\n      }) \r\n      .catch(err => console.log(err))\t\r\n  }\r\n  return (\r\n    <>\r\n    <SearchWrapper>\r\n      <Form>\r\n        <Form.Control type=\"text\" placeholder=\"what are you looking for...\" \r\n          onChange={e => setQuery(e.target.value)}\r\n          style = {{float:'left', width: '40%'}}/>\r\n        <Form.Control as=\"select\" onChange = {e => setType(e.target.value)}\r\n          style = {{float:'left', width: '40%'}}>\r\n          <option>all</option>\r\n          <option>books</option>\r\n          <option>authors</option>\r\n        </Form.Control>\r\n        <Button color=\"primary\" type=\"submit\" onClick ={submitSearch} \r\n          style={{float:'left', width:'10%'}}>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </SearchWrapper>\r\n    <SearchResult/>\r\n    </>\r\n  )\r\n}\r\nexport default SearchBar","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\DashboardBookRow.js",["96"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Media} from 'react-bootstrap';\r\n\r\nexport default class DashboardBookRow extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div class=\"col-3\">\r\n\t\t\t<div className=\"book\">\r\n\t\t\t\t<Media className=\"align-items-center justify-content-center\">\r\n                    <img \r\n                        height={300}\r\n                        className=\"align-self-start mr-3\"\r\n                        src={this.props.book.cover}\r\n                        alt=\"cover\"\r\n                    />\r\n                </Media>\r\n\t\t\t\t<div class=\"row\" text-align=\"center\">\r\n\t\t\t\t\t<div class=\"col\" >\r\n\t\t\t\t\t\t<h7 >{this.props.book.title}</h7>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<h7 >by {this.props.book.author}</h7>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<h7 >price ${this.props.book.price}</h7>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\style\\SearchStyle.js",["97"],"import React from \"react\";\r\nimport { Media, Card, Button } from \"react-bootstrap\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport s from \"styled-components\";\r\n\r\nexport const SearchWrapper = s.nav`\r\n  font-size: 80%;\r\n  position: relative;\r\n  z-index: 8;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ResultWrapper = s.div`\r\n  display: ${(props) => (props.showResult ? \"block\" : \"none\")};\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n`;\r\n\r\nexport const Overlay = s.div`\r\n  content: \" \";\r\n  z-index: 50;\r\n  display: block;\r\n  position: absolute;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ResultBlock = s.div`\r\n  position: fixed;\r\n  z-index: 100;\r\n  width: 75%;\r\n  height: 100%;\r\n  background: white;\r\n  left: 50%;\r\n  margin-left: -37.5%;\r\n  overflow: auto;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst CardWrapper = s.div`\r\n  margin-top: 1rem;\r\n  background: #F5F5F5;\r\n  padding: 2rem;\r\n  margin-bottom: 2rem;\r\n  border-radius:2rem;\r\n`;\r\n\r\nexport const BookCard = ({ title, cover, author, avg_rating }) => (\r\n  <CardWrapper>\r\n    <Media className=\"align-items-center justify-content-center\">\r\n      <img\r\n        height={\"200rem\"}\r\n        className=\"align-self-start mr-3\"\r\n        src={cover}\r\n        alt=\"cover\"\r\n      />\r\n      <Media.Body>\r\n        <h2 className=\"title\">{title}</h2>\r\n        <h4>by {author}</h4>\r\n        {<ReactStars count={5} value={avg_rating} isHalf={true} size={24} />}\r\n        <Button className=\"\" variant=\"outline-primary\" onClick={() => {}}>\r\n          +\r\n        </Button>\r\n      </Media.Body>\r\n    </Media>\r\n  </CardWrapper>\r\n);\r\n","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\GenreButton.js",[],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\PageNavbar.js",[],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\LoginForm.js",["98","99"],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\Profile.js",[],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\Login.js",[],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\BookUserControls.js",["100","101"],"import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\n\r\nexport function BookUserControls({isbn, small}) {\r\n    let [userRating, setUserRating] = useState();\r\n    const user = window.sessionStorage.getItem(\"username\") || 1; \r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:8081/getUserRating/${isbn}/${user}`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t})\r\n        .then((res) => res.json())\r\n        .then((rtg) => {\r\n            if (!rtg.rating) {\r\n                setUserRating(0);\r\n            } else {\r\n                setUserRating(rtg.rating);\r\n            }             \r\n        })\r\n        .catch((err) => console.log(err));\r\n    }, [setUserRating, userRating]);\r\n\r\n    function addRating(rating) {\r\n        const data = { isbn: isbn, rating: rating, user: user}\r\n        fetch(`http://localhost:8081/addRating`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            alert(\"Added rating!\");\r\n            this.setState({userRating: data.rating});\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    function addToList() {\r\n        // localStorage.getItem('myData');\r\n        fetch(`http://localhost:8081/addToList/${isbn}/${user}`, {\r\n\t\t\tmethod: 'GET',\r\n        })\r\n\t\t\t.then((res) => {\r\n                console.log(res)\r\n                alert(\"Added to List!\")\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button className={small ? \"btn-sm\" : \"\"} variant=\"outline-primary\" onClick={addToList}>Add to Reading List</Button>\r\n            {userRating != null &&\r\n                <>\r\n                <div className=\"caption\">Your Rating</div> \r\n                    <ReactStars \r\n                        count={5}\r\n                        value={userRating || 0}\r\n                        isHalf={true}\r\n                        size={small ? 15 : 24}\r\n                        activeColor={\"#ff0019\"}\r\n                        onChange={addRating}\r\n                    /> \r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\BookIcon.js",["102"],"import { Popover, OverlayTrigger } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport React from 'react'\r\nimport { BookRating } from './BookRating'\r\nimport { BookUserControls } from './BookUserControls'\r\n\r\nexport function BookIcon ({isbn, title, cover, author, year_published, avg_rating}) {\r\n    const popover = (\r\n        <Popover id=\"popover-basic\" className=\"w-100\">\r\n            <Popover.Title as=\"h3\">{title}</Popover.Title>\r\n            <Popover.Content>\r\n            <p>by {author}</p>\r\n            {year_published && \r\n                <p>published {year_published}</p>\r\n            }\r\n            {avg_rating &&\r\n                <>\r\n                <p>Avg Rating</p>\r\n                <BookRating isbn={isbn} size={15}/>\r\n                </>\r\n            }\r\n            <hr />\r\n            <BookUserControls isbn={isbn} small={true}/>\r\n            </Popover.Content>\r\n        </Popover>\r\n    );\r\n    \r\n    return (\r\n        <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover} delay={{ hide: 400 }}>\r\n            <a key={isbn} href={`/book/${isbn}`}>\r\n                <img \r\n                    height={150}\r\n                    className=\"p-1\"\r\n                    src={cover}\r\n                    alt={title}\r\n                />\r\n            </a>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\n\r\n\r\n","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\components\\BookRating.js",["103"],"import { useState, useEffect } from \"react\";\r\nimport React from 'react';\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\n\r\nexport function BookRating({isbn, size}) {\r\n    let [rating, setRating] = useState();\r\n\r\n    // only runs once when the component is mounted not when state updates bc of the dependency\r\n    useEffect(() => {\r\n        fetch('http://localhost:8081/getRating/' + isbn, {\r\n\t\t\tmethod: 'GET',\r\n\t\t})\r\n        .then((res) => res.json())\r\n        .then((rtg) => {\r\n            if (!rtg) return;\r\n            setRating(rtg.RATING / 2);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }, [setRating, rating]);\r\n\r\n    // useEffect(() => {\r\n    //     return <ReactStars \r\n    //             count={5}\r\n    //             value={rating}\r\n    //             isHalf={true}\r\n    //             size={size}\r\n    //             edit={false}\r\n    //         />\r\n\r\n    // }, [rating]);\r\n\r\n    return (\r\n        rating != null &&\r\n            <ReactStars \r\n                count={5}\r\n                value={rating}\r\n                isHalf={true}\r\n                size={size}\r\n                edit={false}\r\n            />\r\n    );\r\n\r\n\r\n\r\n}","D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\style\\shared\\index.js",[],"D:\\Library\\Documents\\CIS 550\\Project\\client\\src\\style\\LoginStyle.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":14,"column":8,"nodeType":"110","messageId":"111","endLine":14,"endColumn":17},{"ruleId":"108","severity":1,"message":"112","line":15,"column":8,"nodeType":"110","messageId":"111","endLine":15,"endColumn":18},{"ruleId":"108","severity":1,"message":"113","line":3,"column":37,"nodeType":"110","messageId":"111","endLine":3,"endColumn":43},{"ruleId":"108","severity":1,"message":"114","line":3,"column":51,"nodeType":"110","messageId":"111","endLine":3,"endColumn":59},{"ruleId":"108","severity":1,"message":"115","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":18},{"ruleId":"108","severity":1,"message":"116","line":8,"column":10,"nodeType":"110","messageId":"111","endLine":8,"endColumn":14},{"ruleId":"108","severity":1,"message":"117","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":24},{"ruleId":"108","severity":1,"message":"118","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":23},{"ruleId":"108","severity":1,"message":"119","line":11,"column":11,"nodeType":"110","messageId":"111","endLine":11,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":6,"column":2,"nodeType":"122","messageId":"123","endLine":8,"endColumn":3},{"ruleId":"108","severity":1,"message":"124","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"125","line":95,"column":17,"nodeType":"110","messageId":"111","endLine":95,"endColumn":25},{"ruleId":"108","severity":1,"message":"125","line":127,"column":15,"nodeType":"110","messageId":"111","endLine":127,"endColumn":23},{"ruleId":"108","severity":1,"message":"124","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":24,"column":8,"nodeType":"128","endLine":24,"endColumn":35,"suggestions":"129"},{"ruleId":"108","severity":1,"message":"116","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"130","line":20,"column":8,"nodeType":"128","endLine":20,"endColumn":27,"suggestions":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","'PageNavbar' is defined but never used.","'Button' is defined but never used.","'Carousel' is defined but never used.","'BookCard' is defined but never used.","'Link' is defined but never used.","'DashboardBookRow' is defined but never used.","'redirectLogin' is defined but never used.","'queryResult' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Card' is defined but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isbn' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has a missing dependency: 'isbn'. Either include it or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [isbn, setUserRating, user, userRating]",{"range":"140","text":"141"},"Update the dependencies array to be: [setRating, rating, isbn]",{"range":"142","text":"143"},[760,787],"[isbn, setUserRating, user, userRating]",[624,643],"[setRating, rating, isbn]"]
=======
[{"/Users/Alex/Desktop/Github/better-reads/client/src/index.js":"1","/Users/Alex/Desktop/Github/better-reads/client/src/reportWebVitals.js":"2","/Users/Alex/Desktop/Github/better-reads/client/src/components/App.js":"3","/Users/Alex/Desktop/Github/better-reads/client/src/components/Login.js":"4","/Users/Alex/Desktop/Github/better-reads/client/src/components/Profile.js":"5","/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchBar.js":"6","/Users/Alex/Desktop/Github/better-reads/client/src/components/PageNavbar.js":"7","/Users/Alex/Desktop/Github/better-reads/client/src/components/Home.js":"8","/Users/Alex/Desktop/Github/better-reads/client/src/components/Book.js":"9","/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchResult.js":"10","/Users/Alex/Desktop/Github/better-reads/client/src/components/BookIcon.js":"11","/Users/Alex/Desktop/Github/better-reads/client/src/components/DashboardBookRow.js":"12","/Users/Alex/Desktop/Github/better-reads/client/src/components/GenreButton.js":"13","/Users/Alex/Desktop/Github/better-reads/client/src/style/SearchStyle.js":"14","/Users/Alex/Desktop/Github/better-reads/client/src/components/LoginForm.js":"15","/Users/Alex/Desktop/Github/better-reads/client/src/components/BookUserControls.js":"16","/Users/Alex/Desktop/Github/better-reads/client/src/components/BookRating.js":"17","/Users/Alex/Desktop/Github/better-reads/client/src/style/shared/index.js":"18","/Users/Alex/Desktop/Github/better-reads/client/src/style/ProfileStyle.js":"19"},{"size":574,"mtime":1607132639872,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1606789936555,"results":"22","hashOfConfig":"21"},{"size":1222,"mtime":1608020170423,"results":"23","hashOfConfig":"21"},{"size":317,"mtime":1607833864199,"results":"24","hashOfConfig":"21"},{"size":3112,"mtime":1608112218904,"results":"25","hashOfConfig":"21"},{"size":1378,"mtime":1607834346839,"results":"26","hashOfConfig":"21"},{"size":1341,"mtime":1607830954469,"results":"27","hashOfConfig":"21"},{"size":4011,"mtime":1608102491190,"results":"28","hashOfConfig":"21"},{"size":10621,"mtime":1608105094273,"results":"29","hashOfConfig":"21"},{"size":1252,"mtime":1608102587734,"results":"30","hashOfConfig":"21"},{"size":1295,"mtime":1608089680656,"results":"31","hashOfConfig":"21"},{"size":898,"mtime":1607132730766,"results":"32","hashOfConfig":"21"},{"size":410,"mtime":1607132730767,"results":"33","hashOfConfig":"21"},{"size":1613,"mtime":1607830850072,"results":"34","hashOfConfig":"21"},{"size":7673,"mtime":1608102491191,"results":"35","hashOfConfig":"21"},{"size":2355,"mtime":1608111842866,"results":"36","hashOfConfig":"21"},{"size":1118,"mtime":1608094755226,"results":"37","hashOfConfig":"21"},{"size":193,"mtime":1608112243797,"results":"38","hashOfConfig":"21"},{"size":1004,"mtime":1608110217075,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"15i4qfo",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},"/Users/Alex/Desktop/Github/better-reads/client/src/index.js",[],["89","90"],"/Users/Alex/Desktop/Github/better-reads/client/src/reportWebVitals.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/App.js",["91","92"],"import React, { useState, createContext } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Book from \"./Book\";\nimport SearchResult from \"./SearchResult\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Profile from \"./Profile\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SearchBar from \"./SearchBar\";\nimport PageNavbar from \"./PageNavbar\";\n\nexport const BookContext = createContext();\n\nfunction App() {\n  const [queryResult, setQueryResult] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  return (\n    <BookContext.Provider\n      value={{ queryResult, setQueryResult, showResult, setShowResult }}\n    >\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Login />} />\n            <Route exact path=\"/profile\" render={() => <Profile />} />\n            <Route exact path=\"/home\" render={() => <Home />} />\n            <Route exact path=\"/book/:isbn\" render={() => <Book />} />\n            <Route exact path=\"/SearchResult\" render={() => <SearchResult />} />\n          </Switch>\n        </Router>\n      </div>\n    </BookContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/Alex/Desktop/Github/better-reads/client/src/components/Login.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/Profile.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchBar.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/PageNavbar.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/Home.js",["93","94"],"import React from \"react\";\nimport \"../style/home.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PageNavbar from \"./PageNavbar\";\nimport GenreButton from \"./GenreButton\";\nimport DashboardBookRow from \"./DashboardBookRow\";\nimport { BookIcon } from \"./BookIcon\";\nimport placeholder from \"../files/placeholder.png\";\nimport { redirectLogin } from \"./LoginForm\";\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of books for a specified genre.\n    this.state = {\n      genres: [],\n      books: [],\n    };\n\n    this.showBooks = this.showBooks.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\", {\n      method: \"GET\", // The type of HTTP request.\n    })\n      .then((res) => res.json()) // Convert the response data to a JSON.\n      .then((genreList) => {\n        if (!genreList) return;\n        // Map each genreObj in genreList to an HTML element:\n        // A button which triggers the showMovies function for each genre.\n        let genreDivs = genreList.map((genreObj, i) => (\n          <GenreButton\n            id={\"button-\" + genreObj.GENRE}\n            onClick={() => this.showBooks(genreObj.GENRE)}\n            genre={genreObj.GENRE}\n          />\n        ));\n        // this.showBooks();\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\n        this.setState({\n          genres: genreDivs,\n        });\n      })\n      .catch((err) => console.log(err)); // Print the error if there is one.\n  }\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showBooks(genre) {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres/\" + genre, {\n      method: \"GET\", // The type of HTTP request.\n    })\n      .then((res) => res.json()) // Convert the response data to a JSON.\n      .then((bookList) => {\n        if (!bookList) return;\n        console.log(bookList);\n        // Map each genreObj in genreList to an HTML element:\n        // A button which triggers the showMovies function for each genre.\n        //let bookDivs = bookList.map((bookObj, i) =>\n\n        // <DashboardBookRow id={\"row-\" + bookObj.title + bookObj.rating} book={bookObj}/>\n        // );\n        const recs = bookList.map((book) => {\n          const b = {\n            isbn: book.ISBN,\n            title: book.TITLE,\n            author: book.AUTHOR,\n            genre: book.GENRE,\n            language: book.LANGUAGE,\n            cover: book.COVER || placeholder,\n            publisher: book.PUBLISHER,\n            year_published:\n              book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n            price: book.PRICE,\n            num_pages: book.NUM_PAGES,\n          };\n          return <BookIcon {...b} />;\n        });\n        this.setState({ books: recs });\n\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\n        // this.setState({\n        //     books: bookDivs\n        // })\n      })\n      .catch((err) => console.log(err)); // Print the error if there is one.\n  }\n\n  render() {\n    return (\n      <div className=\"Dashboard\">\n        <PageNavbar active=\"home\" />\n\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Top Books</div>\n            <div className=\"genres-container\">{this.state.genres}</div>\n          </div>\n\n          <br />\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"results-container\" id=\"results\">\n                <div class=\"row\">{this.state.books}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/Alex/Desktop/Github/better-reads/client/src/components/Book.js",["95","96","97","98"],"import React from 'react';\nimport PageNavbar from './PageNavbar'\nimport {Container, Row, Col, Media, Button, Card, Carousel} from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport ReactStars from \"react-rating-stars-component\";\nimport '../style/book.css';\nimport { BookCard } from '../style/SearchStyle'\nimport { Link } from 'react-router-dom'\nimport { BookIcon } from './BookIcon';\nimport { BookRating } from './BookRating';\nimport { BookUserControls } from './BookUserControls';\nimport placeholder from '../files/placeholder.png';\n\nclass Book extends React.Component {\n    constructor(props) {\n        super(props);\n        const isbn = this.props.match.params.isbn;\n        const user = window.sessionStorage.getItem(\"user_id\"); \n\n        this.state = {\n            isbn: isbn,\n            user: user,\n            authorRecs: [],\n            genreRecs: [], \n            userRating: 0,\n        }\n\n        this.addRating = this.addRating.bind(this);\n        this.addToList = this.addToList.bind(this);\n        this.getUserRating = this.getUserRating.bind(this);\n        this.getAuthorRec = this.getAuthorRec.bind(this);\n        this.render = this.render.bind(this);\n    }\n\n    componentDidMount() {\n        this.getBook();\n        this.getRating();\n        this.getUserRating();\n        this.getAuthorRec();\n        this.getGenreRec();\n    }\n    \n    getBook() {\n        fetch('http://localhost:8081/books/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((book) => {\n\t\t\t\tif (!book) return;\n                \n\t\t\t\tthis.setState({\n                    isbn: book.ISBN, \n                    title: book.TITLE, \n                    author: book.AUTHOR,\n                    genre: book.GENRE,\n                    language: book.LANGUAGE,\n                    cover: book.COVER || placeholder, \n                    publisher: book.PUBLISHER,\n                    year_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n                    price: book.PRICE && book.PRICE.toFixed(2),\n                    num_pages: book.NUM_PAGES,\n                });\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n\n    getRating() {\n        fetch('http://localhost:8081/getRating/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((rating) => {\n\t\t\t\tif (!rating) return;\n                \n\t\t\t\tthis.setState(rating);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n\n    getUserRating() {\n        fetch(`http://localhost:8081/getUserRating/${this.state.isbn}/${this.state.user}`, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((userRating) => {\n                if (!userRating) return;\n                \n                var stars = <ReactStars \n                    count={5}\n                    value={userRating.rating}\n                    isHalf={true}\n                    size={24}\n                    activeColor={\"#ff0019\"}\n                    onChange={this.addRating}\n                />;\n\n                this.setState({userRating : stars});\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n\n    addToList() {\n        // localStorage.getItem('myData');\n        console.log(this.state.user)\n        fetch(`http://localhost:8081/addToList/${this.state.isbn}/${this.state.user}`, {\n\t\t\tmethod: 'GET',\n        })\n\t\t\t.then((res) => {\n                console.log(res)\n                alert(\"Added to List!\")\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n\n    addRating(rating) {\n        const data = { isbn: this.state.isbn, rating: rating, user: 1}\n        fetch(`http://localhost:8081/addRating`, {\n            method: 'POST',\n            body: JSON.stringify(data),\n        })\n        // .then((res) => res.json())\n        .then(data => {\n            console.log(data);\n            alert(\"Added rating!\");\n            this.setState({userRating: data.rating});\n        })\n        .catch((err) => console.log(err));\n    }\n\n    getAuthorRec() {\n        fetch('http://localhost:8081/authorRec/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((books) => {\n\t\t\t\tif (!books) return;\n\t\t\t\tconst recs = books.map(book => {\n                    const b = {\n                        isbn: book.ISBN, \n                        title: book.TITLE, \n                        author: book.AUTHOR,\n                        genre: book.GENRE,\n                        language: book.LANGUAGE,\n                        cover: book.COVER || placeholder, \n                        publisher: book.PUBLISHER,\n                        year_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n                        price: book.PRICE,\n                        num_pages: book.NUM_PAGES,\n                    }\n                    return <BookIcon {...b} />\n                    // <div className=\"carousel-item active\">\n                    // <Link key={b.isbn} to={`/book/${b.isbn}`}>\n                    //     <img \n                    //         height={150}\n                    //         className=\"p-1\"\n                    //         src={b.cover}\n                    //         alt={b.title}\n                    //     />\n                    // </Link>\n                    // </div>\n                });\n                this.setState({authorRecs: recs})\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n\n    getGenreRec() {\n        fetch('http://localhost:8081/genreRec/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((books) => {\n                if (!books) return;\n\t\t\t\tconst recs = books.map(book => {\n                    const b = {\n                        isbn: book.ISBN, \n                        title: book.TITLE, \n                        author: book.AUTHOR,\n                        genre: book.GENRE,\n                        language: book.LANGUAGE,\n                        cover: book.COVER || placeholder, \n                        publisher: book.PUBLISHER,\n                        year_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n                        price: book.PRICE && book.PRICE.toFixed(2),\n                        num_pages: book.NUM_PAGES,\n                    }\n                    return <BookIcon {...b} />\n                });\n                this.setState({genreRecs: recs})\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n    \n    render() {\n        return (\n            <div>\n            <PageNavbar/>\n            <Container className=\"justify-content-center p-3\">\n                <Media className=\"align-items-center justify-content-center\">\n                    <img \n                        height={300}\n                        className=\"align-self-start mr-3\"\n                        src={this.state.cover}\n                        alt=\"cover\"\n                    />\n                    <Media.Body className=\"\">\n                        <div className=\"info\">\n                            <h2 className=\"title\">{this.state.title}</h2>\n                            <h4>by {this.state.author}</h4>\n                            <BookRating isbn={this.state.isbn} size = {24}/>\n                        </div>\n                        <Card className=\"userInfo flex-column mt-3 p-2 px-4 align-items-center\">\n                            <BookUserControls isbn={this.state.isbn} />\n                        </Card>\n                    </Media.Body>\n                </Media>\n                {/* <Row className=\"content justify-content-between align-items-center\"> */}\n                <Card className=\"info flex-column my-3\">\n                    <Card.Body>\n                        {this.state.isbn &&\n                            <Row>\n                                <Col><p className=\"label\">ISBN</p></Col>\n                                <Col>{this.state.isbn}</Col>\n                            </Row>\n                        } \n\n                        {this.state.genre &&\n                            <Row>\n                                <Col><p className=\"label\">Genre</p></Col>\n                                <Col>{this.state.genre}</Col>\n                            </Row>\n                        }\n\n                        {this.state.language &&\n                            <Row>\n                                <Col><p className=\"label\">Edition Language</p></Col>\n                                <Col>{this.state.language === 'eng' ? \"English\" : this.state.language}</Col>\n                            </Row>\n                        }\n\n                        {this.state.num_pages &&\n                            <Row>\n                                <Col><p className=\"label\">Number of Pages</p></Col>\n                                <Col>{this.state.num_pages}</Col>\n                            </Row>\n                        } \n\n                        {this.state.format &&\n                            <Row>\n                                <Col><p className=\"label\">Format</p></Col>\n                                <Col>{this.state.format}</Col>\n                            </Row>\n                        }\n\n                        {this.state.price &&\n                            <Row>\n                                <Col><p className=\"label\">Price</p></Col>\n                                <Col>${this.state.price}</Col>\n                            </Row>\n                        }\n\n                        {this.state.year_published && this.state.publisher &&\n                            <div className=\"align-self-stretch\">Published in {this.state.year_published} by {this.state.publisher}</div>\n                        }\n                    </Card.Body>\n                </Card>\n            <Card className=\"rec\">\n                <Card.Body>\n                    {/* <h4><b>YOU MAY ALSO ENJOY</b></h4> */}\n                    <h5>More By This Author</h5>\n                    <div className=\"carousel slide\" data-ride=\"carousel\">\n                    {/* <Carousel> */}\n                        <div class=\"carousel-inner\">\n                        {this.state.authorRecs}\n                        </div>\n                    {/* </Carousel> */}\n                    </div>\n                    <hr />\n                    <h5>More in This Genre</h5>\n                    {/* <Carousel > */}\n                    <div className=\"carousel slide\" data-ride=\"carousel\">\n                        <div class=\"carousel-inner\">\n                        {this.state.genreRecs}\n                         </div>\n                    </div>\n                    {/* </Carousel> */}\n\n                </Card.Body>\n            </Card>\n            </Container>\n\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Book);","/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchResult.js",["99"],"import React, { useContext } from 'react'\nimport { BookContext } from './App'\nimport { ResultWrapper, Overlay, ResultBlock, BookCard } from '../style/SearchStyle'\nimport placeholder from '../files/placeholder.png';\nimport { BookIcon } from './BookIcon';\n\n\nconst SearchResult = () => {\n  const { queryResult, showResult, setShowResult } = useContext(BookContext)\n  return (\n    <>\n    <ResultWrapper showResult = {showResult}>\n      <Overlay/>\n      <ResultBlock>\n        <span class=\"close\" onClick = {() => setShowResult(false)}>&times;</span>\n        {queryResult.map(book => {\n          const d = {\n            isbn: book.ISBN, \n            title: book.TITLE, \n            author: book.AUTHOR,\n            genre: book.GENRE,\n            language: book.LANGUAGE,\n            cover: book.COVER || placeholder, \n            publisher: book.PUBLISHER,\n            year_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n            price: book.PRICE && book.PRICE.toFixed(2),\n            num_pages: book.NUM_PAGES,\n          }\n          \n          return (\n          <a href={`/book/${d.isbn}`}>\n            <BookCard {...d}/>\n          </a>)\n        })}\n      </ResultBlock>\n    </ResultWrapper>\n    </>\n  )\n}\n\nexport default SearchResult","/Users/Alex/Desktop/Github/better-reads/client/src/components/BookIcon.js",["100"],"import { Popover, OverlayTrigger } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport { BookRating } from './BookRating'\nimport { BookUserControls } from './BookUserControls'\n\nexport function BookIcon ({isbn, title, cover, author, year_published, avg_rating}) {\n    const popover = (\n        <Popover id=\"popover-basic\" className=\"w-100\">\n            <Popover.Title as=\"h3\">{title}</Popover.Title>\n            <Popover.Content>\n            <p>by {author}</p>\n            {year_published && \n                <p>published {year_published}</p>\n            }\n            {avg_rating &&\n                <>\n                <p>Avg Rating</p>\n                <BookRating isbn={isbn} size={15}/>\n                </>\n            }\n            <hr />\n            <BookUserControls isbn={isbn} small={true}/>\n            </Popover.Content>\n        </Popover>\n    );\n    \n    return (\n        <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover} delay={{ hide: 400 }}>\n            <a key={isbn} href={`/book/${isbn}`}>\n                <img \n                    height={150}\n                    className=\"p-1\"\n                    src={cover}\n                    alt={title}\n                />\n            </a>\n        </OverlayTrigger>\n    );\n}\n\n\n\n","/Users/Alex/Desktop/Github/better-reads/client/src/components/DashboardBookRow.js",["101"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Media} from 'react-bootstrap';\n\nexport default class DashboardBookRow extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"col-3\">\n\t\t\t<div className=\"book\">\n\t\t\t\t<Media className=\"align-items-center justify-content-center\">\n                    <img \n                        height={300}\n                        className=\"align-self-start mr-3\"\n                        src={this.props.book.cover}\n                        alt=\"cover\"\n                    />\n                </Media>\n\t\t\t\t<div class=\"row\" text-align=\"center\">\n\t\t\t\t\t<div class=\"col\" >\n\t\t\t\t\t\t<h7 >{this.props.book.title}</h7>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<h7 >by {this.props.book.author}</h7>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<h7 >price ${this.props.book.price}</h7>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/Users/Alex/Desktop/Github/better-reads/client/src/components/GenreButton.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/style/SearchStyle.js",["102"],"import React from 'react'\nimport { Media, Card, Button } from 'react-bootstrap'\nimport ReactStars from \"react-rating-stars-component\"\nimport s from 'styled-components'\n\nexport const SearchWrapper = s.nav`\n  font-size: 80%;\n  position: relative;\n  z-index: 8;\n  width: 100%;\n`\n\nexport const ResultWrapper = s.div`\n  display: ${props => props.showResult ? \"block\": \"none\"};\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n`\n\nexport const Overlay = s.div`\n  content: \" \";\n  z-index: 50;\n  display: block;\n  position: absolute;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.5);\n`\n\nexport const ResultBlock = s.div`\n  position: fixed;\n  z-index: 100;\n  width: 75%;\n  height: 100%;\n  background: white;\n  left: 50%;\n  margin-left: -37.5%;\n  overflow: auto;\n  padding: 2rem;\n`\n\nconst CardWrapper = s.div`\n  margin-top: 1rem;\n  background: #F5F5F5;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  border-radius:2rem;\n`\n\nexport const BookCard = ({title, cover, author, avg_rating}) => (\n  <CardWrapper>\n    <Media className=\"align-items-center justify-content-center\">\n      <img \n        height={'200rem'}\n        className=\"align-self-start mr-3\"\n        src={cover}\n        alt=\"cover\"\n      />\n      <Media.Body>\n        <h2 className=\"title\">{title}</h2>\n        <h4>by {author}</h4>\n        {\n          <ReactStars \n              count={5}\n              value={avg_rating}\n              isHalf={true}\n              size={24}\n          />\n        }\n            <Button className=\"\" variant=\"outline-primary\" onClick={() => {}}>+</Button>\n      </Media.Body>\n    </Media>\n  </CardWrapper>\n)","/Users/Alex/Desktop/Github/better-reads/client/src/components/LoginForm.js",["103","104"],"/*\nAccounts lmd to aigc to cmrp taken\n*/\n\nimport React from \"react\";\nimport \"../style/Login.css\";\n\nexport default class LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: \"\",\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      location: \"\",\n      age: \"\",\n    };\n\n    this.handleModeChange = this.handleModeChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleAgeChange = this.handleAgeChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ mode: \"Login\" });\n  }\n\n  async handleModeChange() {\n    if (this.state.mode === \"Login\") {\n      this.setState({ mode: \"Register\" });\n    } else if (this.state.mode === \"Register\") {\n      this.setState({ mode: \"Login\" });\n    }\n    this.setState({\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      location: \"\",\n      age: \"\",\n    });\n  }\n\n  handleNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleUsernameChange(event) {\n    this.setState({ username: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleAgeChange(event) {\n    this.setState({ age: event.target.value });\n  }\n\n  async handleSubmit() {\n    if (this.state.mode === \"Register\") {\n      if (\n        this.state.name &&\n        this.state.username &&\n        this.state.password &&\n        this.state.location &&\n        this.state.age\n      ) {\n        if (isNaN(this.state.age)) {\n          alert(`\"${this.state.age}\" is not a valid age.`);\n        } else if (!this.state.username.match(/^[a-zA-Z0-9]+$/)) {\n          alert(`Please enter an alphanumeric username.`);\n        } else if (this.state.username.length > 20) {\n          alert(`Please enter a username shorter than 20 characters.`);\n        } else {\n          const requestOptions = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: JSON.stringify({\n              name: this.state.name,\n              username: this.state.username,\n              password: this.state.password,\n              location: this.state.location,\n              age: this.state.age,\n            }),\n          };\n          const response = await fetch(\n            \"http://localhost:8081/userRegister/\",\n            requestOptions\n          ).then(async (resx) => {\n            console.log(resx);\n            resx.json().then(async (res) => {\n              console.log(res);\n              if (res.status === \"false\") {\n                alert(\"Username already exists.\");\n              } else {\n                alert(\"Account created! Try logging in.\");\n                this.handleModeChange();\n              }\n            });\n          });\n        }\n      } else {\n        alert(\"All fields are required!\");\n      }\n    } else if ((this.state.mode = \"Login\")) {\n      if (this.state.username && this.state.password) {\n        const requestOptions = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password,\n          }),\n        };\n        const response = await fetch(\n          \"http://localhost:8081/userLogin/\",\n          requestOptions\n        ).then(async (resx) => {\n          resx.json().then(async (res) => {\n            console.log(res);\n            if (res.status === \"false\") {\n              alert(\"Incorrect login info.\");\n            } else {\n              alert(\"Logged!\");\n              console.log(res);\n              window.sessionStorage.setItem(\n                \"user_id\",\n                JSON.stringify(res.user_id)\n              );\n              window.sessionStorage.setItem(\n                \"username\",\n                JSON.stringify(res.username)\n              );\n              window.sessionStorage.setItem(\n                \"location\",\n                JSON.stringify(res.location)\n              );\n              window.sessionStorage.setItem(\"age\", JSON.stringify(res.age));\n              window.location.assign(\"/profile\");\n            }\n          });\n        });\n      } else {\n        alert(\"All fields are required!\");\n      }\n    }\n  }\n\n  render() {\n    var modeText =\n      this.state.mode === \"Login\"\n        ? \"Don't have an account? Register here.\"\n        : \"Already have an account? Login here.\";\n    return (\n      <div className=\"LoginPage\">\n        <div className=\"LoginForm\">\n          <h2 className=\"LoginForm-title\">{this.state.mode}</h2>\n          <br></br>\n          <form>\n            {this.state.mode === \"Register\" && (\n              <input\n                id=\"LoginForm-input\"\n                className=\"LoginForm-elt\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                value={this.state.name}\n                onChange={this.handleNameChange}\n              />\n            )}\n            {this.state.mode === \"Register\" && <br></br>}\n            <input\n              id=\"LoginForm-input\"\n              className=\"LoginForm-elt\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUsernameChange}\n            />\n            <br></br>\n            <input\n              id=\"LoginForm-input\"\n              className=\"LoginForm-elt\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePasswordChange}\n            />\n            <br></br>\n            {this.state.mode === \"Register\" && (\n              <input\n                id=\"LoginForm-input\"\n                className=\"LoginForm-elt\"\n                type=\"text\"\n                name=\"location\"\n                placeholder=\"Location\"\n                value={this.state.location}\n                onChange={this.handleLocationChange}\n              />\n            )}\n            {this.state.mode === \"Register\" && <br></br>}\n            {this.state.mode === \"Register\" && (\n              <input\n                id=\"LoginForm-input\"\n                className=\"LoginForm-elt\"\n                type=\"text\"\n                name=\"age\"\n                placeholder=\"Age\"\n                value={this.state.age}\n                onChange={this.handleAgeChange}\n              />\n            )}\n            {this.state.mode === \"Register\" && <br></br>}\n          </form>\n          <button\n            id=\"LoginForm-button\"\n            className=\"LoginForm-elt\"\n            type=\"button\"\n            onClick={() => this.handleSubmit()}\n          >\n            {this.state.mode.toUpperCase()}\n          </button>\n          <br></br>\n          <button\n            id=\"LoginForm-button\"\n            className=\"LoginForm-elt\"\n            type=\"button\"\n            onClick={() => this.handleModeChange()}\n          >\n            {modeText}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport function redirectLogin() {\n  if (window.sessionStorage.getItem(\"username\") === null) {\n    window.location.assign(\"/\");\n  }\n}\n","/Users/Alex/Desktop/Github/better-reads/client/src/components/BookUserControls.js",["105","106"],"/Users/Alex/Desktop/Github/better-reads/client/src/components/BookRating.js",["107"],"import { useState, useEffect } from \"react\";\nimport React from 'react';\nimport ReactStars from \"react-rating-stars-component\";\n\n\nexport function BookRating({isbn, size}) {\n    let [rating, setRating] = useState();\n\n    // only runs once when the component is mounted not when state updates bc of the dependency\n    useEffect(() => {\n        fetch('http://localhost:8081/getRating/' + isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n        .then((res) => res.json())\n        .then((rtg) => {\n            if (!rtg) return;\n            setRating(rtg.RATING / 2);\n        })\n        .catch((err) => console.log(err));\n    }, [setRating, rating]);\n\n    // useEffect(() => {\n    //     return <ReactStars \n    //             count={5}\n    //             value={rating}\n    //             isHalf={true}\n    //             size={size}\n    //             edit={false}\n    //         />\n\n    // }, [rating]);\n\n    return (\n        rating != null &&\n            <ReactStars \n                count={5}\n                value={rating}\n                isHalf={true}\n                size={size}\n                edit={false}\n            />\n    );\n\n\n\n}","/Users/Alex/Desktop/Github/better-reads/client/src/style/shared/index.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/style/ProfileStyle.js",["108"],"import React from 'react'\nimport { Media, Button } from 'react-bootstrap'\nimport ReactStars from \"react-rating-stars-component\"\nimport s from 'styled-components'\n\nconst CardWrapper = s.div`\n  margin-top: 1rem;\n  background: #F5F5F5;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  border-radius:2rem;\n`\n\nconst BookTitle = s.h3`\n  font-size: 130%;\n`\n\nconst BookAuthor = s.p`\n  font-size: 100%;\n`\n\nexport const BookCard = ({title, cover, author, avg_rating}) => (\n  <CardWrapper>\n    <Media className=\"align-items-center justify-content-center\">\n      <img \n        height={'200rem'}\n        className=\"align-self-start mr-3\"\n        src={cover}\n        alt=\"cover\"\n      />\n      <Media.Body>\n        <BookTitle className=\"title\">{title}</BookTitle>\n        <BookAuthor>by {author}</BookAuthor>\n        {\n          <ReactStars \n              count={5}\n              value={avg_rating}\n              isHalf={true}\n              size={24}\n          />\n        }\n      </Media.Body>\n    </Media>\n  </CardWrapper>\n)",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":17},{"ruleId":"113","severity":1,"message":"117","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":18},{"ruleId":"113","severity":1,"message":"118","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":24},{"ruleId":"113","severity":1,"message":"119","line":9,"column":10,"nodeType":"115","messageId":"116","endLine":9,"endColumn":23},{"ruleId":"113","severity":1,"message":"120","line":3,"column":37,"nodeType":"115","messageId":"116","endLine":3,"endColumn":43},{"ruleId":"113","severity":1,"message":"121","line":3,"column":51,"nodeType":"115","messageId":"116","endLine":3,"endColumn":59},{"ruleId":"113","severity":1,"message":"122","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":18},{"ruleId":"113","severity":1,"message":"123","line":8,"column":10,"nodeType":"115","messageId":"116","endLine":8,"endColumn":14},{"ruleId":"113","severity":1,"message":"124","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":18},{"ruleId":"113","severity":1,"message":"123","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":6,"column":2,"nodeType":"127","messageId":"128","endLine":8,"endColumn":3},{"ruleId":"113","severity":1,"message":"129","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":21},{"ruleId":"113","severity":1,"message":"130","line":98,"column":17,"nodeType":"115","messageId":"116","endLine":98,"endColumn":25},{"ruleId":"113","severity":1,"message":"130","line":130,"column":15,"nodeType":"115","messageId":"116","endLine":130,"endColumn":23},{"ruleId":"113","severity":1,"message":"129","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":25,"column":8,"nodeType":"133","endLine":25,"endColumn":35,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":20,"column":8,"nodeType":"133","endLine":20,"endColumn":27,"suggestions":"136"},{"ruleId":"113","severity":1,"message":"120","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":23},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","'PageNavbar' is defined but never used.","'DashboardBookRow' is defined but never used.","'redirectLogin' is defined but never used.","'Button' is defined but never used.","'Carousel' is defined but never used.","'BookCard' is defined but never used.","'Link' is defined but never used.","'BookIcon' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Card' is defined but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isbn' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'isbn'. Either include it or remove the dependency array.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [isbn, setUserRating, user, userRating]",{"range":"145","text":"146"},"Update the dependencies array to be: [setRating, rating, isbn]",{"range":"147","text":"148"},[759,786],"[isbn, setUserRating, user, userRating]",[605,624],"[setRating, rating, isbn]"]
>>>>>>> Stashed changes
=======
[{"/Users/Alex/Desktop/Github/better-reads/client/src/index.js":"1","/Users/Alex/Desktop/Github/better-reads/client/src/reportWebVitals.js":"2","/Users/Alex/Desktop/Github/better-reads/client/src/components/App.js":"3","/Users/Alex/Desktop/Github/better-reads/client/src/components/Login.js":"4","/Users/Alex/Desktop/Github/better-reads/client/src/components/Profile.js":"5","/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchBar.js":"6","/Users/Alex/Desktop/Github/better-reads/client/src/components/PageNavbar.js":"7","/Users/Alex/Desktop/Github/better-reads/client/src/components/Home.js":"8","/Users/Alex/Desktop/Github/better-reads/client/src/components/Book.js":"9","/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchResult.js":"10","/Users/Alex/Desktop/Github/better-reads/client/src/components/BookIcon.js":"11","/Users/Alex/Desktop/Github/better-reads/client/src/components/DashboardBookRow.js":"12","/Users/Alex/Desktop/Github/better-reads/client/src/components/GenreButton.js":"13","/Users/Alex/Desktop/Github/better-reads/client/src/style/SearchStyle.js":"14","/Users/Alex/Desktop/Github/better-reads/client/src/components/LoginForm.js":"15","/Users/Alex/Desktop/Github/better-reads/client/src/components/BookUserControls.js":"16","/Users/Alex/Desktop/Github/better-reads/client/src/components/BookRating.js":"17","/Users/Alex/Desktop/Github/better-reads/client/src/style/shared/index.js":"18","/Users/Alex/Desktop/Github/better-reads/client/src/style/ProfileStyle.js":"19"},{"size":574,"mtime":1607132639872,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1606789936555,"results":"22","hashOfConfig":"21"},{"size":1222,"mtime":1608020170423,"results":"23","hashOfConfig":"21"},{"size":317,"mtime":1607833864199,"results":"24","hashOfConfig":"21"},{"size":3112,"mtime":1608112218904,"results":"25","hashOfConfig":"21"},{"size":1378,"mtime":1607834346839,"results":"26","hashOfConfig":"21"},{"size":1341,"mtime":1607830954469,"results":"27","hashOfConfig":"21"},{"size":4011,"mtime":1608102491190,"results":"28","hashOfConfig":"21"},{"size":10621,"mtime":1608105094273,"results":"29","hashOfConfig":"21"},{"size":1252,"mtime":1608102587734,"results":"30","hashOfConfig":"21"},{"size":1295,"mtime":1608089680656,"results":"31","hashOfConfig":"21"},{"size":898,"mtime":1607132730766,"results":"32","hashOfConfig":"21"},{"size":410,"mtime":1607132730767,"results":"33","hashOfConfig":"21"},{"size":1613,"mtime":1607830850072,"results":"34","hashOfConfig":"21"},{"size":7673,"mtime":1608102491191,"results":"35","hashOfConfig":"21"},{"size":2355,"mtime":1608111842866,"results":"36","hashOfConfig":"21"},{"size":1118,"mtime":1608094755226,"results":"37","hashOfConfig":"21"},{"size":193,"mtime":1608112243797,"results":"38","hashOfConfig":"21"},{"size":1004,"mtime":1608110217075,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"15i4qfo",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},"/Users/Alex/Desktop/Github/better-reads/client/src/index.js",[],["89","90"],"/Users/Alex/Desktop/Github/better-reads/client/src/reportWebVitals.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/App.js",["91","92"],"import React, { useState, createContext } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Book from \"./Book\";\nimport SearchResult from \"./SearchResult\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Profile from \"./Profile\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SearchBar from \"./SearchBar\";\nimport PageNavbar from \"./PageNavbar\";\n\nexport const BookContext = createContext();\n\nfunction App() {\n  const [queryResult, setQueryResult] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  return (\n    <BookContext.Provider\n      value={{ queryResult, setQueryResult, showResult, setShowResult }}\n    >\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Login />} />\n            <Route exact path=\"/profile\" render={() => <Profile />} />\n            <Route exact path=\"/home\" render={() => <Home />} />\n            <Route exact path=\"/book/:isbn\" render={() => <Book />} />\n            <Route exact path=\"/SearchResult\" render={() => <SearchResult />} />\n          </Switch>\n        </Router>\n      </div>\n    </BookContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/Alex/Desktop/Github/better-reads/client/src/components/Login.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/Profile.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchBar.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/PageNavbar.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/Home.js",["93","94"],"import React from \"react\";\nimport \"../style/home.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PageNavbar from \"./PageNavbar\";\nimport GenreButton from \"./GenreButton\";\nimport DashboardBookRow from \"./DashboardBookRow\";\nimport { BookIcon } from \"./BookIcon\";\nimport placeholder from \"../files/placeholder.png\";\nimport { redirectLogin } from \"./LoginForm\";\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of books for a specified genre.\n    this.state = {\n      genres: [],\n      books: [],\n    };\n\n    this.showBooks = this.showBooks.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\", {\n      method: \"GET\", // The type of HTTP request.\n    })\n      .then((res) => res.json()) // Convert the response data to a JSON.\n      .then((genreList) => {\n        if (!genreList) return;\n        // Map each genreObj in genreList to an HTML element:\n        // A button which triggers the showMovies function for each genre.\n        let genreDivs = genreList.map((genreObj, i) => (\n          <GenreButton\n            id={\"button-\" + genreObj.GENRE}\n            onClick={() => this.showBooks(genreObj.GENRE)}\n            genre={genreObj.GENRE}\n          />\n        ));\n        // this.showBooks();\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\n        this.setState({\n          genres: genreDivs,\n        });\n      })\n      .catch((err) => console.log(err)); // Print the error if there is one.\n  }\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showBooks(genre) {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres/\" + genre, {\n      method: \"GET\", // The type of HTTP request.\n    })\n      .then((res) => res.json()) // Convert the response data to a JSON.\n      .then((bookList) => {\n        if (!bookList) return;\n        console.log(bookList);\n        // Map each genreObj in genreList to an HTML element:\n        // A button which triggers the showMovies function for each genre.\n        //let bookDivs = bookList.map((bookObj, i) =>\n\n        // <DashboardBookRow id={\"row-\" + bookObj.title + bookObj.rating} book={bookObj}/>\n        // );\n        const recs = bookList.map((book) => {\n          const b = {\n            isbn: book.ISBN,\n            title: book.TITLE,\n            author: book.AUTHOR,\n            genre: book.GENRE,\n            language: book.LANGUAGE,\n            cover: book.COVER || placeholder,\n            publisher: book.PUBLISHER,\n            year_published:\n              book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n            price: book.PRICE,\n            num_pages: book.NUM_PAGES,\n          };\n          return <BookIcon {...b} />;\n        });\n        this.setState({ books: recs });\n\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\n        // this.setState({\n        //     books: bookDivs\n        // })\n      })\n      .catch((err) => console.log(err)); // Print the error if there is one.\n  }\n\n  render() {\n    return (\n      <div className=\"Dashboard\">\n        <PageNavbar active=\"home\" />\n\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Top Books</div>\n            <div className=\"genres-container\">{this.state.genres}</div>\n          </div>\n\n          <br />\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"results-container\" id=\"results\">\n                <div class=\"row\">{this.state.books}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/Alex/Desktop/Github/better-reads/client/src/components/Book.js",["95","96","97","98"],"import React from 'react';\nimport PageNavbar from './PageNavbar'\nimport {Container, Row, Col, Media, Button, Card, Carousel} from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport ReactStars from \"react-rating-stars-component\";\nimport '../style/book.css';\nimport { BookCard } from '../style/SearchStyle'\nimport { Link } from 'react-router-dom'\nimport { BookIcon } from './BookIcon';\nimport { BookRating } from './BookRating';\nimport { BookUserControls } from './BookUserControls';\nimport placeholder from '../files/placeholder.png';\n\nclass Book extends React.Component {\n    constructor(props) {\n        super(props);\n        const isbn = this.props.match.params.isbn;\n        const user = window.sessionStorage.getItem(\"user_id\"); \n\n        this.state = {\n            isbn: isbn,\n            user: user,\n            authorRecs: [],\n            genreRecs: [], \n            userRating: 0,\n        }\n\n        this.addRating = this.addRating.bind(this);\n        this.addToList = this.addToList.bind(this);\n        this.getUserRating = this.getUserRating.bind(this);\n        this.getAuthorRec = this.getAuthorRec.bind(this);\n        this.render = this.render.bind(this);\n    }\n\n    componentDidMount() {\n        this.getBook();\n        this.getRating();\n        this.getUserRating();\n        this.getAuthorRec();\n        this.getGenreRec();\n    }\n    \n    getBook() {\n        fetch('http://localhost:8081/books/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((book) => {\n\t\t\t\tif (!book) return;\n                \n\t\t\t\tthis.setState({\n                    isbn: book.ISBN, \n                    title: book.TITLE, \n                    author: book.AUTHOR,\n                    genre: book.GENRE,\n                    language: book.LANGUAGE,\n                    cover: book.COVER || placeholder, \n                    publisher: book.PUBLISHER,\n                    year_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n                    price: book.PRICE && book.PRICE.toFixed(2),\n                    num_pages: book.NUM_PAGES,\n                });\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n\n    getRating() {\n        fetch('http://localhost:8081/getRating/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((rating) => {\n\t\t\t\tif (!rating) return;\n                \n\t\t\t\tthis.setState(rating);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n\n    getUserRating() {\n        fetch(`http://localhost:8081/getUserRating/${this.state.isbn}/${this.state.user}`, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((userRating) => {\n                if (!userRating) return;\n                \n                var stars = <ReactStars \n                    count={5}\n                    value={userRating.rating}\n                    isHalf={true}\n                    size={24}\n                    activeColor={\"#ff0019\"}\n                    onChange={this.addRating}\n                />;\n\n                this.setState({userRating : stars});\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n\n    addToList() {\n        // localStorage.getItem('myData');\n        console.log(this.state.user)\n        fetch(`http://localhost:8081/addToList/${this.state.isbn}/${this.state.user}`, {\n\t\t\tmethod: 'GET',\n        })\n\t\t\t.then((res) => {\n                console.log(res)\n                alert(\"Added to List!\")\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n\n    addRating(rating) {\n        const data = { isbn: this.state.isbn, rating: rating, user: 1}\n        fetch(`http://localhost:8081/addRating`, {\n            method: 'POST',\n            body: JSON.stringify(data),\n        })\n        // .then((res) => res.json())\n        .then(data => {\n            console.log(data);\n            alert(\"Added rating!\");\n            this.setState({userRating: data.rating});\n        })\n        .catch((err) => console.log(err));\n    }\n\n    getAuthorRec() {\n        fetch('http://localhost:8081/authorRec/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((books) => {\n\t\t\t\tif (!books) return;\n\t\t\t\tconst recs = books.map(book => {\n                    const b = {\n                        isbn: book.ISBN, \n                        title: book.TITLE, \n                        author: book.AUTHOR,\n                        genre: book.GENRE,\n                        language: book.LANGUAGE,\n                        cover: book.COVER || placeholder, \n                        publisher: book.PUBLISHER,\n                        year_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n                        price: book.PRICE,\n                        num_pages: book.NUM_PAGES,\n                    }\n                    return <BookIcon {...b} />\n                    // <div className=\"carousel-item active\">\n                    // <Link key={b.isbn} to={`/book/${b.isbn}`}>\n                    //     <img \n                    //         height={150}\n                    //         className=\"p-1\"\n                    //         src={b.cover}\n                    //         alt={b.title}\n                    //     />\n                    // </Link>\n                    // </div>\n                });\n                this.setState({authorRecs: recs})\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n\n    getGenreRec() {\n        fetch('http://localhost:8081/genreRec/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((books) => {\n                if (!books) return;\n\t\t\t\tconst recs = books.map(book => {\n                    const b = {\n                        isbn: book.ISBN, \n                        title: book.TITLE, \n                        author: book.AUTHOR,\n                        genre: book.GENRE,\n                        language: book.LANGUAGE,\n                        cover: book.COVER || placeholder, \n                        publisher: book.PUBLISHER,\n                        year_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n                        price: book.PRICE && book.PRICE.toFixed(2),\n                        num_pages: book.NUM_PAGES,\n                    }\n                    return <BookIcon {...b} />\n                });\n                this.setState({genreRecs: recs})\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n    }\n    \n    render() {\n        return (\n            <div>\n            <PageNavbar/>\n            <Container className=\"justify-content-center p-3\">\n                <Media className=\"align-items-center justify-content-center\">\n                    <img \n                        height={300}\n                        className=\"align-self-start mr-3\"\n                        src={this.state.cover}\n                        alt=\"cover\"\n                    />\n                    <Media.Body className=\"\">\n                        <div className=\"info\">\n                            <h2 className=\"title\">{this.state.title}</h2>\n                            <h4>by {this.state.author}</h4>\n                            <BookRating isbn={this.state.isbn} size = {24}/>\n                        </div>\n                        <Card className=\"userInfo flex-column mt-3 p-2 px-4 align-items-center\">\n                            <BookUserControls isbn={this.state.isbn} />\n                        </Card>\n                    </Media.Body>\n                </Media>\n                {/* <Row className=\"content justify-content-between align-items-center\"> */}\n                <Card className=\"info flex-column my-3\">\n                    <Card.Body>\n                        {this.state.isbn &&\n                            <Row>\n                                <Col><p className=\"label\">ISBN</p></Col>\n                                <Col>{this.state.isbn}</Col>\n                            </Row>\n                        } \n\n                        {this.state.genre &&\n                            <Row>\n                                <Col><p className=\"label\">Genre</p></Col>\n                                <Col>{this.state.genre}</Col>\n                            </Row>\n                        }\n\n                        {this.state.language &&\n                            <Row>\n                                <Col><p className=\"label\">Edition Language</p></Col>\n                                <Col>{this.state.language === 'eng' ? \"English\" : this.state.language}</Col>\n                            </Row>\n                        }\n\n                        {this.state.num_pages &&\n                            <Row>\n                                <Col><p className=\"label\">Number of Pages</p></Col>\n                                <Col>{this.state.num_pages}</Col>\n                            </Row>\n                        } \n\n                        {this.state.format &&\n                            <Row>\n                                <Col><p className=\"label\">Format</p></Col>\n                                <Col>{this.state.format}</Col>\n                            </Row>\n                        }\n\n                        {this.state.price &&\n                            <Row>\n                                <Col><p className=\"label\">Price</p></Col>\n                                <Col>${this.state.price}</Col>\n                            </Row>\n                        }\n\n                        {this.state.year_published && this.state.publisher &&\n                            <div className=\"align-self-stretch\">Published in {this.state.year_published} by {this.state.publisher}</div>\n                        }\n                    </Card.Body>\n                </Card>\n            <Card className=\"rec\">\n                <Card.Body>\n                    {/* <h4><b>YOU MAY ALSO ENJOY</b></h4> */}\n                    <h5>More By This Author</h5>\n                    <div className=\"carousel slide\" data-ride=\"carousel\">\n                    {/* <Carousel> */}\n                        <div class=\"carousel-inner\">\n                        {this.state.authorRecs}\n                        </div>\n                    {/* </Carousel> */}\n                    </div>\n                    <hr />\n                    <h5>More in This Genre</h5>\n                    {/* <Carousel > */}\n                    <div className=\"carousel slide\" data-ride=\"carousel\">\n                        <div class=\"carousel-inner\">\n                        {this.state.genreRecs}\n                         </div>\n                    </div>\n                    {/* </Carousel> */}\n\n                </Card.Body>\n            </Card>\n            </Container>\n\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Book);","/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchResult.js",["99"],"import React, { useContext } from 'react'\nimport { BookContext } from './App'\nimport { ResultWrapper, Overlay, ResultBlock, BookCard } from '../style/SearchStyle'\nimport placeholder from '../files/placeholder.png';\nimport { BookIcon } from './BookIcon';\n\n\nconst SearchResult = () => {\n  const { queryResult, showResult, setShowResult } = useContext(BookContext)\n  return (\n    <>\n    <ResultWrapper showResult = {showResult}>\n      <Overlay/>\n      <ResultBlock>\n        <span class=\"close\" onClick = {() => setShowResult(false)}>&times;</span>\n        {queryResult.map(book => {\n          const d = {\n            isbn: book.ISBN, \n            title: book.TITLE, \n            author: book.AUTHOR,\n            genre: book.GENRE,\n            language: book.LANGUAGE,\n            cover: book.COVER || placeholder, \n            publisher: book.PUBLISHER,\n            year_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n            price: book.PRICE && book.PRICE.toFixed(2),\n            num_pages: book.NUM_PAGES,\n          }\n          \n          return (\n          <a href={`/book/${d.isbn}`}>\n            <BookCard {...d}/>\n          </a>)\n        })}\n      </ResultBlock>\n    </ResultWrapper>\n    </>\n  )\n}\n\nexport default SearchResult","/Users/Alex/Desktop/Github/better-reads/client/src/components/BookIcon.js",["100"],"import { Popover, OverlayTrigger } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport { BookRating } from './BookRating'\nimport { BookUserControls } from './BookUserControls'\n\nexport function BookIcon ({isbn, title, cover, author, year_published, avg_rating}) {\n    const popover = (\n        <Popover id=\"popover-basic\" className=\"w-100\">\n            <Popover.Title as=\"h3\">{title}</Popover.Title>\n            <Popover.Content>\n            <p>by {author}</p>\n            {year_published && \n                <p>published {year_published}</p>\n            }\n            {avg_rating &&\n                <>\n                <p>Avg Rating</p>\n                <BookRating isbn={isbn} size={15}/>\n                </>\n            }\n            <hr />\n            <BookUserControls isbn={isbn} small={true}/>\n            </Popover.Content>\n        </Popover>\n    );\n    \n    return (\n        <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover} delay={{ hide: 400 }}>\n            <a key={isbn} href={`/book/${isbn}`}>\n                <img \n                    height={150}\n                    className=\"p-1\"\n                    src={cover}\n                    alt={title}\n                />\n            </a>\n        </OverlayTrigger>\n    );\n}\n\n\n\n","/Users/Alex/Desktop/Github/better-reads/client/src/components/DashboardBookRow.js",["101"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Media} from 'react-bootstrap';\n\nexport default class DashboardBookRow extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"col-3\">\n\t\t\t<div className=\"book\">\n\t\t\t\t<Media className=\"align-items-center justify-content-center\">\n                    <img \n                        height={300}\n                        className=\"align-self-start mr-3\"\n                        src={this.props.book.cover}\n                        alt=\"cover\"\n                    />\n                </Media>\n\t\t\t\t<div class=\"row\" text-align=\"center\">\n\t\t\t\t\t<div class=\"col\" >\n\t\t\t\t\t\t<h7 >{this.props.book.title}</h7>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<h7 >by {this.props.book.author}</h7>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<h7 >price ${this.props.book.price}</h7>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/Users/Alex/Desktop/Github/better-reads/client/src/components/GenreButton.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/style/SearchStyle.js",["102"],"import React from 'react'\nimport { Media, Card, Button } from 'react-bootstrap'\nimport ReactStars from \"react-rating-stars-component\"\nimport s from 'styled-components'\n\nexport const SearchWrapper = s.nav`\n  font-size: 80%;\n  position: relative;\n  z-index: 8;\n  width: 100%;\n`\n\nexport const ResultWrapper = s.div`\n  display: ${props => props.showResult ? \"block\": \"none\"};\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n`\n\nexport const Overlay = s.div`\n  content: \" \";\n  z-index: 50;\n  display: block;\n  position: absolute;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.5);\n`\n\nexport const ResultBlock = s.div`\n  position: fixed;\n  z-index: 100;\n  width: 75%;\n  height: 100%;\n  background: white;\n  left: 50%;\n  margin-left: -37.5%;\n  overflow: auto;\n  padding: 2rem;\n`\n\nconst CardWrapper = s.div`\n  margin-top: 1rem;\n  background: #F5F5F5;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  border-radius:2rem;\n`\n\nexport const BookCard = ({title, cover, author, avg_rating}) => (\n  <CardWrapper>\n    <Media className=\"align-items-center justify-content-center\">\n      <img \n        height={'200rem'}\n        className=\"align-self-start mr-3\"\n        src={cover}\n        alt=\"cover\"\n      />\n      <Media.Body>\n        <h2 className=\"title\">{title}</h2>\n        <h4>by {author}</h4>\n        {\n          <ReactStars \n              count={5}\n              value={avg_rating}\n              isHalf={true}\n              size={24}\n          />\n        }\n            <Button className=\"\" variant=\"outline-primary\" onClick={() => {}}>+</Button>\n      </Media.Body>\n    </Media>\n  </CardWrapper>\n)","/Users/Alex/Desktop/Github/better-reads/client/src/components/LoginForm.js",["103","104"],"/*\nAccounts lmd to aigc to cmrp taken\n*/\n\nimport React from \"react\";\nimport \"../style/Login.css\";\n\nexport default class LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: \"\",\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      location: \"\",\n      age: \"\",\n    };\n\n    this.handleModeChange = this.handleModeChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleAgeChange = this.handleAgeChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ mode: \"Login\" });\n  }\n\n  async handleModeChange() {\n    if (this.state.mode === \"Login\") {\n      this.setState({ mode: \"Register\" });\n    } else if (this.state.mode === \"Register\") {\n      this.setState({ mode: \"Login\" });\n    }\n    this.setState({\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      location: \"\",\n      age: \"\",\n    });\n  }\n\n  handleNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleUsernameChange(event) {\n    this.setState({ username: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleAgeChange(event) {\n    this.setState({ age: event.target.value });\n  }\n\n  async handleSubmit() {\n    if (this.state.mode === \"Register\") {\n      if (\n        this.state.name &&\n        this.state.username &&\n        this.state.password &&\n        this.state.location &&\n        this.state.age\n      ) {\n        if (isNaN(this.state.age)) {\n          alert(`\"${this.state.age}\" is not a valid age.`);\n        } else if (!this.state.username.match(/^[a-zA-Z0-9]+$/)) {\n          alert(`Please enter an alphanumeric username.`);\n        } else if (this.state.username.length > 20) {\n          alert(`Please enter a username shorter than 20 characters.`);\n        } else {\n          const requestOptions = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: JSON.stringify({\n              name: this.state.name,\n              username: this.state.username,\n              password: this.state.password,\n              location: this.state.location,\n              age: this.state.age,\n            }),\n          };\n          const response = await fetch(\n            \"http://localhost:8081/userRegister/\",\n            requestOptions\n          ).then(async (resx) => {\n            console.log(resx);\n            resx.json().then(async (res) => {\n              console.log(res);\n              if (res.status === \"false\") {\n                alert(\"Username already exists.\");\n              } else {\n                alert(\"Account created! Try logging in.\");\n                this.handleModeChange();\n              }\n            });\n          });\n        }\n      } else {\n        alert(\"All fields are required!\");\n      }\n    } else if ((this.state.mode = \"Login\")) {\n      if (this.state.username && this.state.password) {\n        const requestOptions = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password,\n          }),\n        };\n        const response = await fetch(\n          \"http://localhost:8081/userLogin/\",\n          requestOptions\n        ).then(async (resx) => {\n          resx.json().then(async (res) => {\n            console.log(res);\n            if (res.status === \"false\") {\n              alert(\"Incorrect login info.\");\n            } else {\n              alert(\"Logged!\");\n              console.log(res);\n              window.sessionStorage.setItem(\n                \"user_id\",\n                JSON.stringify(res.user_id)\n              );\n              window.sessionStorage.setItem(\n                \"username\",\n                JSON.stringify(res.username)\n              );\n              window.sessionStorage.setItem(\n                \"location\",\n                JSON.stringify(res.location)\n              );\n              window.sessionStorage.setItem(\"age\", JSON.stringify(res.age));\n              window.location.assign(\"/profile\");\n            }\n          });\n        });\n      } else {\n        alert(\"All fields are required!\");\n      }\n    }\n  }\n\n  render() {\n    var modeText =\n      this.state.mode === \"Login\"\n        ? \"Don't have an account? Register here.\"\n        : \"Already have an account? Login here.\";\n    return (\n      <div className=\"LoginPage\">\n        <div className=\"LoginForm\">\n          <h2 className=\"LoginForm-title\">{this.state.mode}</h2>\n          <br></br>\n          <form>\n            {this.state.mode === \"Register\" && (\n              <input\n                id=\"LoginForm-input\"\n                className=\"LoginForm-elt\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                value={this.state.name}\n                onChange={this.handleNameChange}\n              />\n            )}\n            {this.state.mode === \"Register\" && <br></br>}\n            <input\n              id=\"LoginForm-input\"\n              className=\"LoginForm-elt\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUsernameChange}\n            />\n            <br></br>\n            <input\n              id=\"LoginForm-input\"\n              className=\"LoginForm-elt\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePasswordChange}\n            />\n            <br></br>\n            {this.state.mode === \"Register\" && (\n              <input\n                id=\"LoginForm-input\"\n                className=\"LoginForm-elt\"\n                type=\"text\"\n                name=\"location\"\n                placeholder=\"Location\"\n                value={this.state.location}\n                onChange={this.handleLocationChange}\n              />\n            )}\n            {this.state.mode === \"Register\" && <br></br>}\n            {this.state.mode === \"Register\" && (\n              <input\n                id=\"LoginForm-input\"\n                className=\"LoginForm-elt\"\n                type=\"text\"\n                name=\"age\"\n                placeholder=\"Age\"\n                value={this.state.age}\n                onChange={this.handleAgeChange}\n              />\n            )}\n            {this.state.mode === \"Register\" && <br></br>}\n          </form>\n          <button\n            id=\"LoginForm-button\"\n            className=\"LoginForm-elt\"\n            type=\"button\"\n            onClick={() => this.handleSubmit()}\n          >\n            {this.state.mode.toUpperCase()}\n          </button>\n          <br></br>\n          <button\n            id=\"LoginForm-button\"\n            className=\"LoginForm-elt\"\n            type=\"button\"\n            onClick={() => this.handleModeChange()}\n          >\n            {modeText}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport function redirectLogin() {\n  if (window.sessionStorage.getItem(\"username\") === null) {\n    window.location.assign(\"/\");\n  }\n}\n","/Users/Alex/Desktop/Github/better-reads/client/src/components/BookUserControls.js",["105","106"],"/Users/Alex/Desktop/Github/better-reads/client/src/components/BookRating.js",["107"],"import { useState, useEffect } from \"react\";\nimport React from 'react';\nimport ReactStars from \"react-rating-stars-component\";\n\n\nexport function BookRating({isbn, size}) {\n    let [rating, setRating] = useState();\n\n    // only runs once when the component is mounted not when state updates bc of the dependency\n    useEffect(() => {\n        fetch('http://localhost:8081/getRating/' + isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n        .then((res) => res.json())\n        .then((rtg) => {\n            if (!rtg) return;\n            setRating(rtg.RATING / 2);\n        })\n        .catch((err) => console.log(err));\n    }, [setRating, rating]);\n\n    // useEffect(() => {\n    //     return <ReactStars \n    //             count={5}\n    //             value={rating}\n    //             isHalf={true}\n    //             size={size}\n    //             edit={false}\n    //         />\n\n    // }, [rating]);\n\n    return (\n        rating != null &&\n            <ReactStars \n                count={5}\n                value={rating}\n                isHalf={true}\n                size={size}\n                edit={false}\n            />\n    );\n\n\n\n}","/Users/Alex/Desktop/Github/better-reads/client/src/style/shared/index.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/style/ProfileStyle.js",["108"],"import React from 'react'\nimport { Media, Button } from 'react-bootstrap'\nimport ReactStars from \"react-rating-stars-component\"\nimport s from 'styled-components'\n\nconst CardWrapper = s.div`\n  margin-top: 1rem;\n  background: #F5F5F5;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  border-radius:2rem;\n`\n\nconst BookTitle = s.h3`\n  font-size: 130%;\n`\n\nconst BookAuthor = s.p`\n  font-size: 100%;\n`\n\nexport const BookCard = ({title, cover, author, avg_rating}) => (\n  <CardWrapper>\n    <Media className=\"align-items-center justify-content-center\">\n      <img \n        height={'200rem'}\n        className=\"align-self-start mr-3\"\n        src={cover}\n        alt=\"cover\"\n      />\n      <Media.Body>\n        <BookTitle className=\"title\">{title}</BookTitle>\n        <BookAuthor>by {author}</BookAuthor>\n        {\n          <ReactStars \n              count={5}\n              value={avg_rating}\n              isHalf={true}\n              size={24}\n          />\n        }\n      </Media.Body>\n    </Media>\n  </CardWrapper>\n)",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":17},{"ruleId":"113","severity":1,"message":"117","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":18},{"ruleId":"113","severity":1,"message":"118","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":24},{"ruleId":"113","severity":1,"message":"119","line":9,"column":10,"nodeType":"115","messageId":"116","endLine":9,"endColumn":23},{"ruleId":"113","severity":1,"message":"120","line":3,"column":37,"nodeType":"115","messageId":"116","endLine":3,"endColumn":43},{"ruleId":"113","severity":1,"message":"121","line":3,"column":51,"nodeType":"115","messageId":"116","endLine":3,"endColumn":59},{"ruleId":"113","severity":1,"message":"122","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":18},{"ruleId":"113","severity":1,"message":"123","line":8,"column":10,"nodeType":"115","messageId":"116","endLine":8,"endColumn":14},{"ruleId":"113","severity":1,"message":"124","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":18},{"ruleId":"113","severity":1,"message":"123","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":6,"column":2,"nodeType":"127","messageId":"128","endLine":8,"endColumn":3},{"ruleId":"113","severity":1,"message":"129","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":21},{"ruleId":"113","severity":1,"message":"130","line":98,"column":17,"nodeType":"115","messageId":"116","endLine":98,"endColumn":25},{"ruleId":"113","severity":1,"message":"130","line":130,"column":15,"nodeType":"115","messageId":"116","endLine":130,"endColumn":23},{"ruleId":"113","severity":1,"message":"129","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":25,"column":8,"nodeType":"133","endLine":25,"endColumn":35,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":20,"column":8,"nodeType":"133","endLine":20,"endColumn":27,"suggestions":"136"},{"ruleId":"113","severity":1,"message":"120","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":23},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","'PageNavbar' is defined but never used.","'DashboardBookRow' is defined but never used.","'redirectLogin' is defined but never used.","'Button' is defined but never used.","'Carousel' is defined but never used.","'BookCard' is defined but never used.","'Link' is defined but never used.","'BookIcon' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Card' is defined but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isbn' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'isbn'. Either include it or remove the dependency array.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [isbn, setUserRating, user, userRating]",{"range":"145","text":"146"},"Update the dependencies array to be: [setRating, rating, isbn]",{"range":"147","text":"148"},[759,786],"[isbn, setUserRating, user, userRating]",[605,624],"[setRating, rating, isbn]"]
>>>>>>> Stashed changes
