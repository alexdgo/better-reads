[{"/Users/Alex/Desktop/Github/better-reads/client/src/index.js":"1","/Users/Alex/Desktop/Github/better-reads/client/src/reportWebVitals.js":"2","/Users/Alex/Desktop/Github/better-reads/client/src/components/App.js":"3","/Users/Alex/Desktop/Github/better-reads/client/src/components/Book.js":"4","/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchBar.js":"5","/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchResult.js":"6","/Users/Alex/Desktop/Github/better-reads/client/src/style/SearchStyle.js":"7"},{"size":574,"mtime":1607132639872,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606789936555,"results":"10","hashOfConfig":"9"},{"size":826,"mtime":1607132639865,"results":"11","hashOfConfig":"9"},{"size":297,"mtime":1607132639865,"results":"12","hashOfConfig":"9"},{"size":1448,"mtime":1607132639866,"results":"13","hashOfConfig":"9"},{"size":711,"mtime":1607132639870,"results":"14","hashOfConfig":"9"},{"size":1692,"mtime":1607132639876,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15i4qfo",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/Users/Alex/Desktop/Github/better-reads/client/src/index.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/reportWebVitals.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/components/App.js",[],["34","35"],"/Users/Alex/Desktop/Github/better-reads/client/src/components/Book.js",["36"],"import React from 'react';\n\nexport default class Recommendations extends React.Component {\n    constructor(props) {\n    super(props);\n\n    }\n    \n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}","/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchBar.js",["37"],"import React, { useState, useContext } from 'react'\nimport {Button, Form} from 'react-bootstrap'\n\nimport { BookContext } from './App'\nimport SearchResult from './SearchResult'\nimport { SearchWrapper } from '../style/SearchStyle'\n\nconst SearchBar = () => {\n  const [query, setQuery] = useState()\n  const [type, setType] = useState(\"all\")\n  const { queryResult, setQueryResult, setShowResult } = useContext(BookContext)\n  const submitSearch = (e) => {\n    e.preventDefault()\n    fetch(`http://localhost:8081/search/${type}/${query}`, {\n      method: 'GET' \n    })\n      .then(res => res.json())\n      .then(res => {\n        setQueryResult(res)\n        setShowResult(true)\n      }) \n      .catch(err => console.log(err))\t\n  }\n  return (\n    <>\n    <SearchWrapper>\n      <Form>\n        <Form.Control type=\"text\" placeholder=\"what are you looking for...\" \n          onChange={e => setQuery(e.target.value)}\n          style = {{float:'left', width: '40%'}}/>\n        <Form.Control as=\"select\" onChange = {e => setType(e.target.value)}\n          style = {{float:'left', width: '40%'}}>\n          <option>all</option>\n          <option>books</option>\n          <option>authors</option>\n        </Form.Control>\n        <Button color=\"primary\" type=\"submit\" onClick ={submitSearch} \n          style={{float:'left', width:'10%'}}>\n          Search\n        </Button>\n      </Form>\n    </SearchWrapper>\n    <SearchResult/>\n    </>\n  )\n}\nexport default SearchBar","/Users/Alex/Desktop/Github/better-reads/client/src/components/SearchResult.js",[],"/Users/Alex/Desktop/Github/better-reads/client/src/style/SearchStyle.js",["38"],"import React from 'react'\nimport { Media, Card, Button } from 'react-bootstrap'\nimport ReactStars from \"react-rating-stars-component\"\nimport s from 'styled-components'\n\nexport const SearchWrapper = s.nav`\n  font-size: 80%;\n  position: fixed;\n  z-index: 8;\n  width: 100%;\n  height: 5rem;\n  padding: 1rem;\n  background-color: #D3D3D3;\n  padding-left: 10%\n`\n\nexport const ResultWrapper = s.div`\n  display: ${props => props.showResult ? \"block\": \"none\"};\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n`\n\nexport const Overlay = s.div`\n  content: \" \";\n  z-index: 10;\n  display: block;\n  position: absolute;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.5);\n`\n\nexport const ResultBlock = s.div`\n  position: fixed;\n  z-index: 100;\n  width: 75%;\n  height: 100%;\n  background: white;\n  left: 50%;\n  margin-left: -37.5%;\n  overflow: auto;\n  padding: 2rem;\n`\n\nconst CardWrapper = s.div`\n  margin-top: 1rem;\n  background: #F5F5F5;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  border-radius:2rem;\n`\n\nexport const BookCard = ({title, cover, author, avg_rating}) => (\n  <CardWrapper>\n    <Media className=\"align-items-center justify-content-center\">\n      <img \n        height={'200rem'}\n        className=\"align-self-start mr-3\"\n        src={cover}\n        alt=\"cover\"\n      />\n      <Media.Body>\n        <h2 className=\"title\">{title}</h2>\n        <h4>by {author}</h4>\n        {\n          <ReactStars \n              count={5}\n              value={avg_rating}\n              isHalf={true}\n              size={24}\n          />\n        }\n            <Button className=\"\" variant=\"outline-primary\" onClick={() => {}}>+</Button>\n      </Media.Body>\n    </Media>\n  </CardWrapper>\n)",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":5,"column":5,"nodeType":"45","messageId":"46","endLine":8,"endColumn":6},{"ruleId":"47","severity":1,"message":"48","line":11,"column":11,"nodeType":"49","messageId":"50","endLine":11,"endColumn":22},{"ruleId":"47","severity":1,"message":"51","line":2,"column":17,"nodeType":"49","messageId":"50","endLine":2,"endColumn":21},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'queryResult' is assigned a value but never used.","Identifier","unusedVar","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]