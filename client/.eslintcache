[{"/Users/leah/Desktop/CIS550/better-reads/client/src/index.js":"1","/Users/leah/Desktop/CIS550/better-reads/client/src/reportWebVitals.js":"2","/Users/leah/Desktop/CIS550/better-reads/client/src/components/App.js":"3","/Users/leah/Desktop/CIS550/better-reads/client/src/components/Login.js":"4","/Users/leah/Desktop/CIS550/better-reads/client/src/components/Home.js":"5","/Users/leah/Desktop/CIS550/better-reads/client/src/components/Book.js":"6","/Users/leah/Desktop/CIS550/better-reads/client/src/components/SearchResult.js":"7","/Users/leah/Desktop/CIS550/better-reads/client/src/components/Profile.js":"8","/Users/leah/Desktop/CIS550/better-reads/client/src/components/DashboardBookRow.js":"9","/Users/leah/Desktop/CIS550/better-reads/client/src/components/GenreButton.js":"10","/Users/leah/Desktop/CIS550/better-reads/client/src/components/BookIcon.js":"11","/Users/leah/Desktop/CIS550/better-reads/client/src/components/BookRating.js":"12","/Users/leah/Desktop/CIS550/better-reads/client/src/components/PageNavbar.js":"13","/Users/leah/Desktop/CIS550/better-reads/client/src/style/SearchStyle.js":"14","/Users/leah/Desktop/CIS550/better-reads/client/src/components/BookUserControls.js":"15","/Users/leah/Desktop/CIS550/better-reads/client/src/style/ProfileStyle.js":"16","/Users/leah/Desktop/CIS550/better-reads/client/src/components/SearchBar.js":"17","/Users/leah/Desktop/CIS550/better-reads/client/src/style/shared/index.js":"18","/Users/leah/Desktop/CIS550/better-reads/client/src/components/UserRec.js":"19"},{"size":569,"mtime":1608153824460,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1606949049783,"results":"22","hashOfConfig":"21"},{"size":2023,"mtime":1608164582608,"results":"23","hashOfConfig":"21"},{"size":7296,"mtime":1608164582614,"results":"24","hashOfConfig":"21"},{"size":4306,"mtime":1608164582614,"results":"25","hashOfConfig":"21"},{"size":7562,"mtime":1608164582609,"results":"26","hashOfConfig":"21"},{"size":1479,"mtime":1608164582615,"results":"27","hashOfConfig":"21"},{"size":3757,"mtime":1608164582615,"results":"28","hashOfConfig":"21"},{"size":945,"mtime":1608164582612,"results":"29","hashOfConfig":"21"},{"size":436,"mtime":1608164582613,"results":"30","hashOfConfig":"21"},{"size":1148,"mtime":1608164582611,"results":"31","hashOfConfig":"21"},{"size":1022,"mtime":1608152448782,"results":"32","hashOfConfig":"21"},{"size":1642,"mtime":1608164813302,"results":"33","hashOfConfig":"21"},{"size":1542,"mtime":1608167032937,"results":"34","hashOfConfig":"21"},{"size":3000,"mtime":1608164601035,"results":"35","hashOfConfig":"21"},{"size":1030,"mtime":1608164582616,"results":"36","hashOfConfig":"21"},{"size":1463,"mtime":1608164613385,"results":"37","hashOfConfig":"21"},{"size":193,"mtime":1608128915395,"results":"38","hashOfConfig":"21"},{"size":3182,"mtime":1608164582615,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x9uhro",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},"/Users/leah/Desktop/CIS550/better-reads/client/src/index.js",[],"/Users/leah/Desktop/CIS550/better-reads/client/src/reportWebVitals.js",[],"/Users/leah/Desktop/CIS550/better-reads/client/src/components/App.js",[],"/Users/leah/Desktop/CIS550/better-reads/client/src/components/Login.js",[],["87","88"],"/Users/leah/Desktop/CIS550/better-reads/client/src/components/Home.js",["89"],"import React from 'react';\nimport '../style/home.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardBookRow from './DashboardBookRow';\nimport { BookIcon } from './BookIcon';\nimport placeholder from '../files/placeholder.png';\n\nexport default class Dashboard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// The state maintained by this React Component. This component maintains the list of genres,\n\t\t// and a list of books for a specified genre.\n\t\tthis.state = {\n\t\t\tgenres: [],\n\t\t\tbooks: [],\n\t\t};\n\n\t\tthis.showBooks = this.showBooks.bind(this);\n\t}\n\n\t// React function that is called when the page load.\n\tcomponentDidMount() {\n\t\t// Send an HTTP request to the server.\n\t\tfetch('http://localhost:8081/genres', {\n\t\t\tmethod: 'GET', // The type of HTTP request.\n\t\t})\n\t\t\t.then((res) => res.json()) // Convert the response data to a JSON.\n\t\t\t.then((genreList) => {\n\t\t\t\tif (!genreList) return;\n\t\t\t\t// Map each genreObj in genreList to an HTML element:\n\t\t\t\t// A button which triggers the showMovies function for each genre.\n\t\t\t\tlet genreDivs = genreList.map((genreObj, i) => (\n\t\t\t\t\t<GenreButton\n\t\t\t\t\t\tid={'button-' + genreObj.GENRE}\n\t\t\t\t\t\tonClick={() => this.showBooks(genreObj.GENRE)}\n\t\t\t\t\t\tgenre={genreObj.GENRE}\n\t\t\t\t\t/>\n\t\t\t\t));\n\t\t\t\t// this.showBooks();\n\t\t\t\t// Set the state of the genres list to the value returned by the HTTP response from the server.\n\t\t\t\tthis.setState({\n\t\t\t\t\tgenres: genreDivs,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => console.log(err)); // Print the error if there is one.\n\t}\n\n\t/* ---- Q1b (Dashboard) ---- */\n\t/* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n\tshowBooks(genre) {\n\t\t// Send an HTTP request to the server.\n\t\tfetch('http://localhost:8081/genres/' + genre, {\n\t\t\tmethod: 'GET', // The type of HTTP request.\n\t\t})\n\t\t\t.then((res) => res.json()) // Convert the response data to a JSON.\n\t\t\t.then((bookList) => {\n\t\t\t\tif (!bookList) return;\n\t\t\t\tconsole.log(bookList);\n\t\t\t\t// Map each genreObj in genreList to an HTML element:\n\t\t\t\t// A button which triggers the showMovies function for each genre.\n\t\t\t\t//let bookDivs = bookList.map((bookObj, i) =>\n\n\t\t\t\t// <DashboardBookRow id={\"row-\" + bookObj.title + bookObj.rating} book={bookObj}/>\n\t\t\t\t// );\n\t\t\t\tconst recs = bookList.map((book) => {\n\t\t\t\t\tconst authorTrimmed = book.AUTHOR.includes('/')\n\t\t\t\t\t\t? book.AUTHOR.slice(0, book.AUTHOR.indexOf('/'))\n\t\t\t\t\t\t: book.AUTHOR;\n\t\t\t\t\tconst b = {\n\t\t\t\t\t\tisbn: book.ISBN,\n\t\t\t\t\t\ttitle: book.TITLE,\n\t\t\t\t\t\tauthor: authorTrimmed,\n\t\t\t\t\t\tgenre: book.GENRE,\n\t\t\t\t\t\tlanguage: book.LANGUAGE,\n\t\t\t\t\t\tcover: book.COVER || placeholder,\n\t\t\t\t\t\tpublisher: book.PUBLISHER,\n\t\t\t\t\t\tyear_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n\t\t\t\t\t\tprice: book.PRICE,\n\t\t\t\t\t\tnum_pages: book.NUM_PAGES,\n\t\t\t\t\t};\n\t\t\t\t\treturn <BookIcon {...b} />;\n\t\t\t\t});\n\t\t\t\tthis.setState({ books: recs });\n\n\t\t\t\t// Set the state of the genres list to the value returned by the HTTP response from the server.\n\t\t\t\t// this.setState({\n\t\t\t\t//     books: bookDivs\n\t\t\t\t// })\n\t\t\t})\n\t\t\t.catch((err) => console.log(err)); // Print the error if there is one.\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Dashboard\">\n\t\t\t\t<PageNavbar active=\"home\" />\n\n\t\t\t\t<br></br>\n\t\t\t\t<div className=\"container movies-container\">\n\t\t\t\t\t<div className=\"jumbotron\">\n\t\t\t\t\t\t<div className=\"h5\">Top Books</div>\n\t\t\t\t\t\t<div className=\"genres-container\">{this.state.genres}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<div className=\"jumbotron\">\n\t\t\t\t\t\t<div className=\"movies-container\">\n\t\t\t\t\t\t\t<div className=\"results-container\" id=\"results\">\n\t\t\t\t\t\t\t\t<div class=\"row\">{this.state.books}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/Users/leah/Desktop/CIS550/better-reads/client/src/components/Book.js",["90","91","92"],"import React from \"react\";\nimport PageNavbar from \"./PageNavbar\";\nimport {\n  Container,\n  Row,\n  Col,\n  Media,\n  //Button,\n  Card,\n  //Carousel,\n} from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n//import ReactStars from \"react-rating-stars-component\";\nimport \"../style/book.css\";\nimport { BookIcon } from \"./BookIcon\";\nimport { BookRating } from \"./BookRating\";\nimport { BookUserControls } from \"./BookUserControls\";\nimport placeholder from \"../files/placeholder.png\";\n\nclass Book extends React.Component {\n  constructor(props) {\n    super(props);\n    const isbn = this.props.match.params.isbn;\n    const user = window.localStorage.getItem(\"user_id\");\n\n    this.state = {\n      isbn: isbn,\n      user: user,\n      authorRecs: [],\n      genreRecs: [],\n      userRating: 0,\n    };\n    this.getAuthorRec = this.getAuthorRec.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBook();\n    this.getAuthorRec();\n    this.getGenreRec();\n  }\n\n<<<<<<< HEAD\n\tgetBook() {\n\t\tfetch('http://localhost:8081/books/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((book) => {\n\t\t\t\tif (!book) return;\n\t\t\t\tconst authorTrimmed = book.AUTHOR.includes('/')\n\t\t\t\t\t? book.AUTHOR.slice(0, book.AUTHOR.indexOf('/'))\n\t\t\t\t\t: book.AUTHOR;\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tisbn: book.ISBN,\n\t\t\t\t\ttitle: book.TITLE,\n\t\t\t\t\tauthor: authorTrimmed,\n\t\t\t\t\tgenre: book.GENRE,\n\t\t\t\t\tlanguage: book.LANGUAGE,\n\t\t\t\t\tcover: book.COVER || placeholder,\n\t\t\t\t\tpublisher: book.PUBLISHER,\n\t\t\t\t\tyear_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n\t\t\t\t\tprice: book.PRICE && book.PRICE.toFixed(2),\n\t\t\t\t\tnum_pages: book.NUM_PAGES,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t}\n\n\tgetAuthorRec() {\n\t\tfetch('http://localhost:8081/authorRec/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((books) => {\n\t\t\t\tif (!books) return;\n\t\t\t\tconst recs = books.map((book) => {\n\t\t\t\t\tconst authorTrimmed = book.AUTHOR.includes('/')\n\t\t\t\t\t\t? book.AUTHOR.slice(0, book.AUTHOR.indexOf('/'))\n\t\t\t\t\t\t: book.AUTHOR;\n\t\t\t\t\tconst b = {\n\t\t\t\t\t\tisbn: book.ISBN,\n\t\t\t\t\t\ttitle: book.TITLE,\n\t\t\t\t\t\tauthor: authorTrimmed,\n\t\t\t\t\t\tgenre: book.GENRE,\n\t\t\t\t\t\tlanguage: book.LANGUAGE,\n\t\t\t\t\t\tcover: book.COVER || placeholder,\n\t\t\t\t\t\tpublisher: book.PUBLISHER,\n\t\t\t\t\t\tyear_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n\t\t\t\t\t\tprice: book.PRICE,\n\t\t\t\t\t\tnum_pages: book.NUM_PAGES,\n\t\t\t\t\t};\n\t\t\t\t\treturn <BookIcon {...b} />;\n\t\t\t\t});\n\t\t\t\tthis.setState({ authorRecs: recs });\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t}\n\n\tgetGenreRec() {\n\t\tfetch('http://localhost:8081/genreRec/' + this.state.isbn, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((books) => {\n\t\t\t\tif (!books) return;\n\t\t\t\tconst recs = books.map((book) => {\n\t\t\t\t\tconst authorTrimmed = book.AUTHOR.includes('/')\n\t\t\t\t\t\t? book.AUTHOR.slice(0, book.AUTHOR.indexOf('/'))\n\t\t\t\t\t\t: book.AUTHOR;\n\t\t\t\t\tconst b = {\n\t\t\t\t\t\tisbn: book.ISBN,\n\t\t\t\t\t\ttitle: book.TITLE,\n\t\t\t\t\t\tauthor: authorTrimmed,\n\t\t\t\t\t\tgenre: book.GENRE,\n\t\t\t\t\t\tlanguage: book.LANGUAGE,\n\t\t\t\t\t\tcover: book.COVER || placeholder,\n\t\t\t\t\t\tpublisher: book.PUBLISHER,\n\t\t\t\t\t\tyear_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n\t\t\t\t\t\tprice: book.PRICE && book.PRICE.toFixed(2),\n\t\t\t\t\t\tnum_pages: book.NUM_PAGES,\n\t\t\t\t\t};\n\t\t\t\t\treturn <BookIcon {...b} />;\n\t\t\t\t});\n\t\t\t\tthis.setState({ genreRecs: recs });\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t}\n=======\n  getBook() {\n    fetch(\"http://localhost:8081/books/\" + this.state.isbn, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((book) => {\n        if (!book) return;\n\n        this.setState({\n          isbn: book.ISBN,\n          title: book.TITLE,\n          author: book.AUTHOR,\n          genre: book.GENRE,\n          language: book.LANGUAGE,\n          cover: book.COVER || placeholder,\n          publisher: book.PUBLISHER,\n          year_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n          price: book.PRICE && book.PRICE.toFixed(2),\n          num_pages: book.NUM_PAGES,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  getAuthorRec() {\n    fetch(\"http://localhost:8081/authorRec/\" + this.state.isbn, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((books) => {\n        if (!books) return;\n        const recs = books.map((book) => {\n          const b = {\n            isbn: book.ISBN,\n            title: book.TITLE,\n            author: book.AUTHOR,\n            genre: book.GENRE,\n            language: book.LANGUAGE,\n            cover: book.COVER || placeholder,\n            publisher: book.PUBLISHER,\n            year_published:\n              book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n            price: book.PRICE,\n            num_pages: book.NUM_PAGES,\n          };\n          return <BookIcon {...b} />;\n        });\n        this.setState({ authorRecs: recs });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  getGenreRec() {\n    fetch(\"http://localhost:8081/genreRec/\" + this.state.isbn, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((books) => {\n        if (!books) return;\n        const recs = books.map((book) => {\n          const b = {\n            isbn: book.ISBN,\n            title: book.TITLE,\n            author: book.AUTHOR,\n            genre: book.GENRE,\n            language: book.LANGUAGE,\n            cover: book.COVER || placeholder,\n            publisher: book.PUBLISHER,\n            year_published:\n              book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n            price: book.PRICE && book.PRICE.toFixed(2),\n            num_pages: book.NUM_PAGES,\n          };\n          return <BookIcon {...b} />;\n        });\n        this.setState({ genreRecs: recs });\n      })\n      .catch((err) => console.log(err));\n  }\n>>>>>>> 01b5dad2279134c084324ade276c35e41f184106\n\n  render() {\n    return (\n      <div>\n        <PageNavbar />\n        <Container className=\"justify-content-center p-3\">\n          <Media className=\"align-items-center justify-content-center\">\n            <img\n              height={300}\n              className=\"align-self-start mr-3\"\n              src={this.state.cover}\n              alt=\"cover\"\n            />\n            <Media.Body className=\"\">\n              <div className=\"info\">\n                <h2 className=\"title\">{this.state.title}</h2>\n                <h4>by {this.state.author}</h4>\n                <BookRating isbn={this.state.isbn} size={24} />\n              </div>\n              <Card className=\"userInfo flex-column mt-3 p-2 px-4 align-items-center\">\n                <BookUserControls isbn={this.state.isbn} />\n              </Card>\n            </Media.Body>\n          </Media>\n          {/* <Row className=\"content justify-content-between align-items-center\"> */}\n          <Card className=\"info flex-column my-3\">\n            <Card.Body>\n              {this.state.isbn && (\n                <Row>\n                  <Col>\n                    <p className=\"label\">ISBN</p>\n                  </Col>\n                  <Col>{this.state.isbn}</Col>\n                </Row>\n              )}\n\n              {this.state.genre && (\n                <Row>\n                  <Col>\n                    <p className=\"label\">Genre</p>\n                  </Col>\n                  <Col>{this.state.genre}</Col>\n                </Row>\n              )}\n\n              {this.state.language && (\n                <Row>\n                  <Col>\n                    <p className=\"label\">Edition Language</p>\n                  </Col>\n                  <Col>\n                    {this.state.language === \"eng\"\n                      ? \"English\"\n                      : this.state.language}\n                  </Col>\n                </Row>\n              )}\n\n              {this.state.num_pages && (\n                <Row>\n                  <Col>\n                    <p className=\"label\">Number of Pages</p>\n                  </Col>\n                  <Col>{this.state.num_pages}</Col>\n                </Row>\n              )}\n\n              {this.state.format && (\n                <Row>\n                  <Col>\n                    <p className=\"label\">Format</p>\n                  </Col>\n                  <Col>{this.state.format}</Col>\n                </Row>\n              )}\n\n              {this.state.price && (\n                <Row>\n                  <Col>\n                    <p className=\"label\">Price</p>\n                  </Col>\n                  <Col>${this.state.price}</Col>\n                </Row>\n              )}\n\n              {this.state.year_published && this.state.publisher && (\n                <div className=\"align-self-stretch\">\n                  Published in {this.state.year_published} by{\" \"}\n                  {this.state.publisher}\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n          <Card className=\"rec\">\n            <Card.Body>\n              {/* <h4><b>YOU MAY ALSO ENJOY</b></h4> */}\n              <h5>More By This Author</h5>\n              <div className=\"carousel slide\" data-ride=\"carousel\">\n                {/* <Carousel> */}\n                <div class=\"carousel-inner\">{this.state.authorRecs}</div>\n                {/* </Carousel> */}\n              </div>\n              <hr />\n              <h5>More in This Genre</h5>\n              {/* <Carousel > */}\n              <div className=\"carousel slide\" data-ride=\"carousel\">\n                <div class=\"carousel-inner\">{this.state.genreRecs}</div>\n              </div>\n              {/* </Carousel> */}\n            </Card.Body>\n          </Card>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Book);\n","/Users/leah/Desktop/CIS550/better-reads/client/src/components/SearchResult.js",[],"/Users/leah/Desktop/CIS550/better-reads/client/src/components/Profile.js",[],"/Users/leah/Desktop/CIS550/better-reads/client/src/components/DashboardBookRow.js",["93"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Media} from 'react-bootstrap';\n\nexport default class DashboardBookRow extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"col-3\">\n\t\t\t<div className=\"book\">\n\t\t\t\t<Media className=\"align-items-center justify-content-center\">\n                    <img \n                        height={300}\n                        className=\"align-self-start mr-3\"\n                        src={this.props.book.cover}\n                        alt=\"cover\"\n                    />\n                </Media>\n\t\t\t\t<div class=\"row\" text-align=\"center\">\n\t\t\t\t\t<div class=\"col\" >\n\t\t\t\t\t\t<h7 >{this.props.book.title}</h7>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<h7 >by {this.props.book.author}</h7>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<h7 >price ${this.props.book.price}</h7>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/Users/leah/Desktop/CIS550/better-reads/client/src/components/GenreButton.js",[],"/Users/leah/Desktop/CIS550/better-reads/client/src/components/BookIcon.js",["94"],"import { Popover, OverlayTrigger } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport { BookRating } from './BookRating'\nimport { BookUserControls } from './BookUserControls'\n\nexport function BookIcon ({isbn, title, cover, author, year_published, avg_rating}) {\n    const popover = (\n        <Popover id=\"popover-basic\" className=\"w-100\">\n            <Popover.Title as=\"h3\">{title}</Popover.Title>\n            <Popover.Content>\n            <p>by {author}</p>\n            {year_published && \n                <p>published {year_published}</p>\n            }\n            {avg_rating &&\n                <>\n                <p>Avg Rating</p>\n                <BookRating isbn={isbn} size={15}/>\n                </>\n            }\n            <hr />\n            <BookUserControls isbn={isbn} small={true}/>\n            </Popover.Content>\n        </Popover>\n    );\n    \n    return (\n        <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover} delay={{ hide: 400 }}>\n            <a key={isbn} href={`/book/${isbn}`}>\n                <img \n                    height={150}\n                    className=\"p-1\"\n                    src={cover}\n                    alt={title}\n                />\n            </a>\n        </OverlayTrigger>\n    );\n}\n\n\n\n","/Users/leah/Desktop/CIS550/better-reads/client/src/components/BookRating.js",["95"],"import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport ReactStars from \"react-rating-stars-component\";\n\nexport function BookRating({ isbn, size }) {\n  let [rating, setRating] = useState();\n\n  // only runs once when the component is mounted not when state updates bc of the dependency\n  useEffect(() => {\n    fetch(\"http://localhost:8081/getRating/\" + isbn, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((rtg) => {\n        if (!rtg) return;\n        setRating(rtg.RATING / 2);\n      })\n      .catch((err) => console.log(err));\n  }, [setRating, rating]);\n\n  // useEffect(() => {\n  //     return <ReactStars\n  //             count={5}\n  //             value={rating}\n  //             isHalf={true}\n  //             size={size}\n  //             edit={false}\n  //         />\n\n  // }, [rating]);\n\n  return (\n    rating != null && (\n      <ReactStars\n        count={5}\n        value={rating}\n        isHalf={true}\n        size={size}\n        edit={false}\n      />\n    )\n  );\n}\n","/Users/leah/Desktop/CIS550/better-reads/client/src/components/PageNavbar.js",["96"],"/Users/leah/Desktop/CIS550/better-reads/client/src/style/SearchStyle.js",["97","98","99"],"/Users/leah/Desktop/CIS550/better-reads/client/src/components/BookUserControls.js",["100"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ReactStars from \"react-rating-stars-component\";\n\nexport function BookUserControls({ isbn, small }) {\n<<<<<<< HEAD\n\tlet [userRating, setUserRating] = useState();\n\tlet [inList, setInList] = useState();\n\tconst user = window.localStorage.getItem('user_id');\n=======\n  let [userRating, setUserRating] = useState();\n  let [inList, setInList] = useState();\n  // const [listButton, setListButton] = useState();\n  const user = window.localStorage.getItem(\"user_id\");\n>>>>>>> 3d32144961766f415cb594fee6c864ae619d737d\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(\n        `http://localhost:8081/getUserRating/${isbn}&${user}`,\n        {\n          method: \"GET\",\n        }\n      );\n      res\n        .json()\n        .then((rtg) => {\n          console.log(rtg);\n          if (!rtg.RATING) {\n            console.log(\"HEY\");\n            setUserRating(0);\n          } else {\n            setUserRating(rtg.RATING / 2);\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n    fetchData();\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(\n        `http://localhost:8081/getInList/${isbn}/${user}`,\n        {\n          method: \"GET\",\n        }\n      );\n      res\n        .json()\n        .then((list) => {\n          if (list.length > 0) {\n            setInList(true);\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n    fetchData();\n  });\n\n  function addRating(rating) {\n    setUserRating(rating);\n\n    const data = { isbn: isbn, rating: rating, user: user };\n    fetch(`http://localhost:8081/addRating`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((data) => {\n        console.log(data);\n        alert(\"Added rating!\");\n      })\n      .catch((err) => console.log(err));\n  }\n\n  const addToList = () => {\n    setInList(true);\n\n    // localStorage.getItem('myData');\n    fetch(`http://localhost:8081/addToList/${isbn}/${user}`, {\n      method: \"GET\",\n    })\n      .then((res) => {\n        console.log(res);\n        alert(\"Added to List!\");\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const removeFromList = () => {\n    setInList(false);\n\n    fetch(`http://localhost:8081/deleteFromList/${isbn}/${user}`, {\n      method: \"GET\",\n    })\n      .then((res) => {\n        console.log(res);\n        alert(\"Removed!\");\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <Button\n        className={small ? \"btn-sm\" : \"\"}\n        variant={inList ? \"primary\" : \"outline-primary\"}\n        onClick={inList ? removeFromList : addToList}\n      >\n        {inList ? \"Remove From List\" : \"Add to Reading List\"}\n      </Button>\n      {userRating != null && (\n        <>\n          <div className=\"caption\">Your Rating</div>\n          <ReactStars\n            count={5}\n            value={userRating || 0}\n            isHalf={true}\n            size={small ? 15 : 24}\n            activeColor={\"#ff0019\"}\n            onChange={addRating}\n          />\n        </>\n      )}\n    </>\n  );\n}\n","/Users/leah/Desktop/CIS550/better-reads/client/src/style/ProfileStyle.js",["101"],"import React from 'react'\nimport { Media, Button } from 'react-bootstrap'\nimport ReactStars from \"react-rating-stars-component\"\nimport s from 'styled-components'\n\nconst CardWrapper = s.div`\n  margin-top: 1rem;\n  background: #F5F5F5;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  border-radius:2rem;\n`\n\nconst BookTitle = s.h3`\n  font-size: 130%;\n`\n\nconst BookAuthor = s.p`\n  font-size: 100%;\n`\n\nexport const BookCard = ({title, cover, author, avg_rating}) => (\n  <CardWrapper>\n    <Media className=\"align-items-center justify-content-center\">\n      <img \n        height={'200rem'}\n        className=\"align-self-start mr-3\"\n        src={cover}\n        alt=\"cover\"\n      />\n      <Media.Body>\n        <BookTitle className=\"title\">{title}</BookTitle>\n        <BookAuthor>by {author}</BookAuthor>\n        {\n          <ReactStars \n              count={5}\n              value={avg_rating}\n              isHalf={true}\n              size={24}\n          />\n        }\n      </Media.Body>\n    </Media>\n  </CardWrapper>\n)","/Users/leah/Desktop/CIS550/better-reads/client/src/components/SearchBar.js",[],"/Users/leah/Desktop/CIS550/better-reads/client/src/style/shared/index.js",[],"/Users/leah/Desktop/CIS550/better-reads/client/src/components/UserRec.js",["102"],"import React from 'react';\nimport { Card, Container, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport PageNavbar from './PageNavbar';\nimport placeholder from '../files/placeholder.png';\nimport { BookIcon } from './BookIcon';\n\nclass UserRec extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuser: window.localStorage.getItem('user_id'),\n\t\t\tageRecs: [],\n\t\t\tlocRecs: [],\n\t\t};\n\n\t\tconsole.log('USER ', this.state.user);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getLocRec();\n\t\tthis.getAgeRec();\n\t}\n\n\tgetLocRec() {\n\t\tfetch('http://localhost:8081/locationRec/' + this.state.user, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((books) => {\n\t\t\t\tif (!books) return;\n\t\t\t\tconst recs = books.map((book) => {\n\t\t\t\t\tconst authorTrimmed = book.AUTHOR.includes('/')\n\t\t\t\t\t\t? book.AUTHOR.slice(0, book.AUTHOR.indexOf('/'))\n\t\t\t\t\t\t: book.AUTHOR;\n\t\t\t\t\tconst b = {\n\t\t\t\t\t\tisbn: book.ISBN,\n\t\t\t\t\t\ttitle: book.TITLE,\n\t\t\t\t\t\tauthor: authorTrimmed,\n\t\t\t\t\t\tgenre: book.GENRE,\n\t\t\t\t\t\tlanguage: book.LANGUAGE,\n\t\t\t\t\t\tcover: book.COVER || placeholder,\n\t\t\t\t\t\tpublisher: book.PUBLISHER,\n\t\t\t\t\t\tyear_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n\t\t\t\t\t\tprice: book.PRICE,\n\t\t\t\t\t\tnum_pages: book.NUM_PAGES,\n\t\t\t\t\t};\n\t\t\t\t\treturn <BookIcon {...b} />;\n\t\t\t\t});\n\t\t\t\tthis.setState({ locRecs: recs });\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t}\n\n\tgetAgeRec() {\n\t\tfetch('http://localhost:8081/ageRec/' + this.state.user, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((books) => {\n\t\t\t\tif (!books) return;\n\t\t\t\tconst recs = books.map((book) => {\n\t\t\t\t\tconst authorTrimmed = book.AUTHOR.includes('/')\n\t\t\t\t\t\t? book.AUTHOR.slice(0, book.AUTHOR.indexOf('/'))\n\t\t\t\t\t\t: book.AUTHOR;\n\t\t\t\t\tconst b = {\n\t\t\t\t\t\tisbn: book.ISBN,\n\t\t\t\t\t\ttitle: book.TITLE,\n\t\t\t\t\t\tauthor: authorTrimmed,\n\t\t\t\t\t\tgenre: book.GENRE,\n\t\t\t\t\t\tlanguage: book.LANGUAGE,\n\t\t\t\t\t\tcover: book.COVER || placeholder,\n\t\t\t\t\t\tpublisher: book.PUBLISHER,\n\t\t\t\t\t\tyear_published: book.YEAR_PUBLISHED && parseInt(book.YEAR_PUBLISHED),\n\t\t\t\t\t\tprice: book.PRICE,\n\t\t\t\t\t\tnum_pages: book.NUM_PAGES,\n\t\t\t\t\t};\n\t\t\t\t\treturn <BookIcon {...b} />;\n\t\t\t\t});\n\t\t\t\tthis.setState({ ageRecs: recs });\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<PageNavbar />\n\t\t\t\t<Container className=\"justify-content-center p-3\">\n\t\t\t\t\t<Card className=\"info justify-content-center my-3\">\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<h5>Readers Your Age Also Enjoyed</h5>\n\t\t\t\t\t\t\t{this.state.ageRecs}\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card className=\"info flex-column my-3\">\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<h5>Readers Near You Also Enjoyed</h5>\n\t\t\t\t\t\t\t{this.state.locRecs}\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default withRouter(UserRec);\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":24},{"ruleId":"107","severity":1,"message":"111","line":3,"column":38,"nodeType":"109","messageId":"110","endLine":3,"endColumn":44},{"ruleId":"107","severity":1,"message":"112","line":3,"column":52,"nodeType":"109","messageId":"110","endLine":3,"endColumn":60},{"ruleId":"107","severity":1,"message":"113","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":6,"column":2,"nodeType":"116","messageId":"117","endLine":8,"endColumn":3},{"ruleId":"107","severity":1,"message":"118","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":20,"column":8,"nodeType":"121","endLine":20,"endColumn":27,"suggestions":"122"},{"ruleId":"107","severity":1,"message":"123","line":7,"column":10,"nodeType":"109","messageId":"110","endLine":7,"endColumn":14},{"ruleId":"107","severity":1,"message":"123","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":2,"column":23,"nodeType":"109","messageId":"110","endLine":2,"endColumn":29},{"ruleId":"107","severity":1,"message":"113","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":18},{"ruleId":"107","severity":1,"message":"123","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"111","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":23},{"ruleId":"107","severity":1,"message":"111","line":2,"column":27,"nodeType":"109","messageId":"110","endLine":2,"endColumn":33},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'DashboardBookRow' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Carousel' is defined but never used.","'ReactStars' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isbn'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'Card' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [setRating, rating, isbn]",{"range":"129","text":"130"},[605,624],"[setRating, rating, isbn]"]